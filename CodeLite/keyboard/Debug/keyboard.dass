
./Debug/keyboard.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void ) {
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f990 	bl	20000328 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	
	// Setup for keypad
	*GPIO_MODER &= 0x0000FFFF;
20000014:	4b2a      	ldr	r3, [pc, #168]	; (200000c0 <app_init+0xb0>)
20000016:	4a2a      	ldr	r2, [pc, #168]	; (200000c0 <app_init+0xb0>)
20000018:	6812      	ldr	r2, [r2, #0]
2000001a:	0412      	lsls	r2, r2, #16
2000001c:	0c12      	lsrs	r2, r2, #16
2000001e:	601a      	str	r2, [r3, #0]
	*GPIO_MODER |= 0x55000000;
20000020:	4b27      	ldr	r3, [pc, #156]	; (200000c0 <app_init+0xb0>)
20000022:	4a27      	ldr	r2, [pc, #156]	; (200000c0 <app_init+0xb0>)
20000024:	6812      	ldr	r2, [r2, #0]
20000026:	21aa      	movs	r1, #170	; 0xaa
20000028:	05c9      	lsls	r1, r1, #23
2000002a:	430a      	orrs	r2, r1
2000002c:	601a      	str	r2, [r3, #0]
	
	*GPIO_OTYPER &= 0x00FF;
2000002e:	4a25      	ldr	r2, [pc, #148]	; (200000c4 <app_init+0xb4>)
20000030:	4b24      	ldr	r3, [pc, #144]	; (200000c4 <app_init+0xb4>)
20000032:	881b      	ldrh	r3, [r3, #0]
20000034:	b29b      	uxth	r3, r3
20000036:	21ff      	movs	r1, #255	; 0xff
20000038:	400b      	ands	r3, r1
2000003a:	b29b      	uxth	r3, r3
2000003c:	8013      	strh	r3, [r2, #0]
	*GPIO_OTYPER |= 0x7000;
2000003e:	4921      	ldr	r1, [pc, #132]	; (200000c4 <app_init+0xb4>)
20000040:	4b20      	ldr	r3, [pc, #128]	; (200000c4 <app_init+0xb4>)
20000042:	881b      	ldrh	r3, [r3, #0]
20000044:	b29b      	uxth	r3, r3
20000046:	22e0      	movs	r2, #224	; 0xe0
20000048:	01d2      	lsls	r2, r2, #7
2000004a:	4313      	orrs	r3, r2
2000004c:	b29b      	uxth	r3, r3
2000004e:	800b      	strh	r3, [r1, #0]
	
	*GPIO_PUPDR &= 0x0000FFFF;
20000050:	4b1d      	ldr	r3, [pc, #116]	; (200000c8 <app_init+0xb8>)
20000052:	4a1d      	ldr	r2, [pc, #116]	; (200000c8 <app_init+0xb8>)
20000054:	6812      	ldr	r2, [r2, #0]
20000056:	0412      	lsls	r2, r2, #16
20000058:	0c12      	lsrs	r2, r2, #16
2000005a:	601a      	str	r2, [r3, #0]
	*GPIO_PUPDR |= 0xAAAA0000;
2000005c:	4b1a      	ldr	r3, [pc, #104]	; (200000c8 <app_init+0xb8>)
2000005e:	4a1a      	ldr	r2, [pc, #104]	; (200000c8 <app_init+0xb8>)
20000060:	6812      	ldr	r2, [r2, #0]
20000062:	491a      	ldr	r1, [pc, #104]	; (200000cc <app_init+0xbc>)
20000064:	430a      	orrs	r2, r1
20000066:	601a      	str	r2, [r3, #0]
	
	// Setup for 7 segments display
	*GPIO_MODER &= 0xFFFF0000;
20000068:	4b15      	ldr	r3, [pc, #84]	; (200000c0 <app_init+0xb0>)
2000006a:	4a15      	ldr	r2, [pc, #84]	; (200000c0 <app_init+0xb0>)
2000006c:	6812      	ldr	r2, [r2, #0]
2000006e:	0c12      	lsrs	r2, r2, #16
20000070:	0412      	lsls	r2, r2, #16
20000072:	601a      	str	r2, [r3, #0]
	*GPIO_MODER |= 0x00005555;
20000074:	4b12      	ldr	r3, [pc, #72]	; (200000c0 <app_init+0xb0>)
20000076:	4a12      	ldr	r2, [pc, #72]	; (200000c0 <app_init+0xb0>)
20000078:	6812      	ldr	r2, [r2, #0]
2000007a:	4915      	ldr	r1, [pc, #84]	; (200000d0 <app_init+0xc0>)
2000007c:	430a      	orrs	r2, r1
2000007e:	601a      	str	r2, [r3, #0]
	
	*GPIO_OTYPER &= 0xFF00;
20000080:	4a10      	ldr	r2, [pc, #64]	; (200000c4 <app_init+0xb4>)
20000082:	4b10      	ldr	r3, [pc, #64]	; (200000c4 <app_init+0xb4>)
20000084:	881b      	ldrh	r3, [r3, #0]
20000086:	b29b      	uxth	r3, r3
20000088:	21ff      	movs	r1, #255	; 0xff
2000008a:	438b      	bics	r3, r1
2000008c:	b29b      	uxth	r3, r3
2000008e:	8013      	strh	r3, [r2, #0]
	*GPIO_OTYPER |= 0x0077;
20000090:	4a0c      	ldr	r2, [pc, #48]	; (200000c4 <app_init+0xb4>)
20000092:	4b0c      	ldr	r3, [pc, #48]	; (200000c4 <app_init+0xb4>)
20000094:	881b      	ldrh	r3, [r3, #0]
20000096:	b29b      	uxth	r3, r3
20000098:	2177      	movs	r1, #119	; 0x77
2000009a:	430b      	orrs	r3, r1
2000009c:	b29b      	uxth	r3, r3
2000009e:	8013      	strh	r3, [r2, #0]
	
	*GPIO_PUPDR &= 0xFFFF0000;
200000a0:	4b09      	ldr	r3, [pc, #36]	; (200000c8 <app_init+0xb8>)
200000a2:	4a09      	ldr	r2, [pc, #36]	; (200000c8 <app_init+0xb8>)
200000a4:	6812      	ldr	r2, [r2, #0]
200000a6:	0c12      	lsrs	r2, r2, #16
200000a8:	0412      	lsls	r2, r2, #16
200000aa:	601a      	str	r2, [r3, #0]
	*GPIO_PUPDR |= 0x0000AAAA;
200000ac:	4b06      	ldr	r3, [pc, #24]	; (200000c8 <app_init+0xb8>)
200000ae:	4a06      	ldr	r2, [pc, #24]	; (200000c8 <app_init+0xb8>)
200000b0:	6812      	ldr	r2, [r2, #0]
200000b2:	4908      	ldr	r1, [pc, #32]	; (200000d4 <app_init+0xc4>)
200000b4:	430a      	orrs	r2, r1
200000b6:	601a      	str	r2, [r3, #0]
}
200000b8:	46c0      	nop			; (mov r8, r8)
200000ba:	46bd      	mov	sp, r7
200000bc:	bd80      	pop	{r7, pc}
200000be:	46c0      	nop			; (mov r8, r8)
200000c0:	40020c00 	andmi	r0, r2, r0, lsl #24
200000c4:	40020c04 	andmi	r0, r2, r4, lsl #24
200000c8:	40020c0c 	andmi	r0, r2, ip, lsl #24
200000cc:	aaaa0000 	bge	1ea800d4 <startup-0x157ff2c>
200000d0:	00005555 	andeq	r5, r0, r5, asr r5
200000d4:	0000aaaa 	andeq	sl, r0, sl, lsr #21

200000d8 <activateRow>:

void activateRow(unsigned char row) {
200000d8:	b580      	push	{r7, lr}
200000da:	b082      	sub	sp, #8
200000dc:	af00      	add	r7, sp, #0
200000de:	0002      	movs	r2, r0
200000e0:	1dfb      	adds	r3, r7, #7
200000e2:	701a      	strb	r2, [r3, #0]
	switch(row) {
200000e4:	1dfb      	adds	r3, r7, #7
200000e6:	781b      	ldrb	r3, [r3, #0]
200000e8:	2b04      	cmp	r3, #4
200000ea:	d818      	bhi.n	2000011e <activateRow+0x46>
200000ec:	009a      	lsls	r2, r3, #2
200000ee:	4b0e      	ldr	r3, [pc, #56]	; (20000128 <activateRow+0x50>)
200000f0:	18d3      	adds	r3, r2, r3
200000f2:	681b      	ldr	r3, [r3, #0]
200000f4:	469f      	mov	pc, r3
		case 0: *GPIO_ODR_HIGH = 0x00; break;
200000f6:	4b0d      	ldr	r3, [pc, #52]	; (2000012c <activateRow+0x54>)
200000f8:	2200      	movs	r2, #0
200000fa:	701a      	strb	r2, [r3, #0]
200000fc:	e00f      	b.n	2000011e <activateRow+0x46>
		case 1: *GPIO_ODR_HIGH = 0x10; break;
200000fe:	4b0b      	ldr	r3, [pc, #44]	; (2000012c <activateRow+0x54>)
20000100:	2210      	movs	r2, #16
20000102:	701a      	strb	r2, [r3, #0]
20000104:	e00b      	b.n	2000011e <activateRow+0x46>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
20000106:	4b09      	ldr	r3, [pc, #36]	; (2000012c <activateRow+0x54>)
20000108:	2220      	movs	r2, #32
2000010a:	701a      	strb	r2, [r3, #0]
2000010c:	e007      	b.n	2000011e <activateRow+0x46>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
2000010e:	4b07      	ldr	r3, [pc, #28]	; (2000012c <activateRow+0x54>)
20000110:	2240      	movs	r2, #64	; 0x40
20000112:	701a      	strb	r2, [r3, #0]
20000114:	e003      	b.n	2000011e <activateRow+0x46>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
20000116:	4b05      	ldr	r3, [pc, #20]	; (2000012c <activateRow+0x54>)
20000118:	2280      	movs	r2, #128	; 0x80
2000011a:	701a      	strb	r2, [r3, #0]
2000011c:	46c0      	nop			; (mov r8, r8)
	}
}
2000011e:	46c0      	nop			; (mov r8, r8)
20000120:	46bd      	mov	sp, r7
20000122:	b002      	add	sp, #8
20000124:	bd80      	pop	{r7, pc}
20000126:	46c0      	nop			; (mov r8, r8)
20000128:	20000348 	andcs	r0, r0, r8, asr #6
2000012c:	40020c15 	andmi	r0, r2, r5, lsl ip

20000130 <readColumn>:

unsigned char readColumn(void) {
20000130:	b580      	push	{r7, lr}
20000132:	b082      	sub	sp, #8
20000134:	af00      	add	r7, sp, #0
	unsigned char idr = *GPIO_IDR_HIGH;
20000136:	4a10      	ldr	r2, [pc, #64]	; (20000178 <readColumn+0x48>)
20000138:	1dfb      	adds	r3, r7, #7
2000013a:	7812      	ldrb	r2, [r2, #0]
2000013c:	701a      	strb	r2, [r3, #0]
	if(idr == 0x01) return 1;
2000013e:	1dfb      	adds	r3, r7, #7
20000140:	781b      	ldrb	r3, [r3, #0]
20000142:	2b01      	cmp	r3, #1
20000144:	d101      	bne.n	2000014a <readColumn+0x1a>
20000146:	2301      	movs	r3, #1
20000148:	e012      	b.n	20000170 <readColumn+0x40>
	if(idr == 0x02) return 2;
2000014a:	1dfb      	adds	r3, r7, #7
2000014c:	781b      	ldrb	r3, [r3, #0]
2000014e:	2b02      	cmp	r3, #2
20000150:	d101      	bne.n	20000156 <readColumn+0x26>
20000152:	2302      	movs	r3, #2
20000154:	e00c      	b.n	20000170 <readColumn+0x40>
	if(idr == 0x04) return 3;
20000156:	1dfb      	adds	r3, r7, #7
20000158:	781b      	ldrb	r3, [r3, #0]
2000015a:	2b04      	cmp	r3, #4
2000015c:	d101      	bne.n	20000162 <readColumn+0x32>
2000015e:	2303      	movs	r3, #3
20000160:	e006      	b.n	20000170 <readColumn+0x40>
	if(idr == 0x08) return 4;
20000162:	1dfb      	adds	r3, r7, #7
20000164:	781b      	ldrb	r3, [r3, #0]
20000166:	2b08      	cmp	r3, #8
20000168:	d101      	bne.n	2000016e <readColumn+0x3e>
2000016a:	2304      	movs	r3, #4
2000016c:	e000      	b.n	20000170 <readColumn+0x40>
	return 0;
2000016e:	2300      	movs	r3, #0
}
20000170:	0018      	movs	r0, r3
20000172:	46bd      	mov	sp, r7
20000174:	b002      	add	sp, #8
20000176:	bd80      	pop	{r7, pc}
20000178:	40020c11 	andmi	r0, r2, r1, lsl ip

2000017c <keyb>:

unsigned char keyb(void) {
2000017c:	b590      	push	{r4, r7, lr}
2000017e:	b087      	sub	sp, #28
20000180:	af00      	add	r7, sp, #0
	unsigned char keys[] = {0x1,0x2,0x3,0xA,0x4,0x5,0x6,0xB,0x7,0x8,0x9,0xC,0xE,0x0,0xF,0xD};
20000182:	1d3b      	adds	r3, r7, #4
20000184:	4a1f      	ldr	r2, [pc, #124]	; (20000204 <keyb+0x88>)
20000186:	ca13      	ldmia	r2!, {r0, r1, r4}
20000188:	c313      	stmia	r3!, {r0, r1, r4}
2000018a:	6812      	ldr	r2, [r2, #0]
2000018c:	601a      	str	r2, [r3, #0]
	for(char row = 1; row <= 4; row++) {
2000018e:	2317      	movs	r3, #23
20000190:	18fb      	adds	r3, r7, r3
20000192:	2201      	movs	r2, #1
20000194:	701a      	strb	r2, [r3, #0]
20000196:	e027      	b.n	200001e8 <keyb+0x6c>
		activateRow(row);
20000198:	2317      	movs	r3, #23
2000019a:	18fb      	adds	r3, r7, r3
2000019c:	781b      	ldrb	r3, [r3, #0]
2000019e:	0018      	movs	r0, r3
200001a0:	f7ff ff9a 	bl	200000d8 <activateRow>
		char column = readColumn();
200001a4:	2316      	movs	r3, #22
200001a6:	18fc      	adds	r4, r7, r3
200001a8:	f7ff ffc2 	bl	20000130 <readColumn>
200001ac:	0003      	movs	r3, r0
200001ae:	7023      	strb	r3, [r4, #0]
		if(column != 0) {
200001b0:	2316      	movs	r3, #22
200001b2:	18fb      	adds	r3, r7, r3
200001b4:	781b      	ldrb	r3, [r3, #0]
200001b6:	2b00      	cmp	r3, #0
200001b8:	d00f      	beq.n	200001da <keyb+0x5e>
			activateRow(0);
200001ba:	2000      	movs	r0, #0
200001bc:	f7ff ff8c 	bl	200000d8 <activateRow>
			return keys[4 * (row - 1) + (column - 1)];
200001c0:	2317      	movs	r3, #23
200001c2:	18fb      	adds	r3, r7, r3
200001c4:	781b      	ldrb	r3, [r3, #0]
200001c6:	3b01      	subs	r3, #1
200001c8:	009a      	lsls	r2, r3, #2
200001ca:	2316      	movs	r3, #22
200001cc:	18fb      	adds	r3, r7, r3
200001ce:	781b      	ldrb	r3, [r3, #0]
200001d0:	3b01      	subs	r3, #1
200001d2:	18d3      	adds	r3, r2, r3
200001d4:	1d3a      	adds	r2, r7, #4
200001d6:	5cd3      	ldrb	r3, [r2, r3]
200001d8:	e00f      	b.n	200001fa <keyb+0x7e>
	for(char row = 1; row <= 4; row++) {
200001da:	2317      	movs	r3, #23
200001dc:	18fb      	adds	r3, r7, r3
200001de:	781a      	ldrb	r2, [r3, #0]
200001e0:	2317      	movs	r3, #23
200001e2:	18fb      	adds	r3, r7, r3
200001e4:	3201      	adds	r2, #1
200001e6:	701a      	strb	r2, [r3, #0]
200001e8:	2317      	movs	r3, #23
200001ea:	18fb      	adds	r3, r7, r3
200001ec:	781b      	ldrb	r3, [r3, #0]
200001ee:	2b04      	cmp	r3, #4
200001f0:	d9d2      	bls.n	20000198 <keyb+0x1c>
		}
	}
	activateRow(0);
200001f2:	2000      	movs	r0, #0
200001f4:	f7ff ff70 	bl	200000d8 <activateRow>
	return 0xFF;
200001f8:	23ff      	movs	r3, #255	; 0xff
}
200001fa:	0018      	movs	r0, r3
200001fc:	46bd      	mov	sp, r7
200001fe:	b007      	add	sp, #28
20000200:	bd90      	pop	{r4, r7, pc}
20000202:	46c0      	nop			; (mov r8, r8)
20000204:	2000035c 	andcs	r0, r0, ip, asr r3

20000208 <updateDisplay>:

unsigned char updateDisplay(unsigned char key) {
20000208:	b580      	push	{r7, lr}
2000020a:	b082      	sub	sp, #8
2000020c:	af00      	add	r7, sp, #0
2000020e:	0002      	movs	r2, r0
20000210:	1dfb      	adds	r3, r7, #7
20000212:	701a      	strb	r2, [r3, #0]
	if(key == 0x0) *GPIO_ODR_LOW = 0x3F; 
20000214:	1dfb      	adds	r3, r7, #7
20000216:	781b      	ldrb	r3, [r3, #0]
20000218:	2b00      	cmp	r3, #0
2000021a:	d103      	bne.n	20000224 <updateDisplay+0x1c>
2000021c:	4b41      	ldr	r3, [pc, #260]	; (20000324 <updateDisplay+0x11c>)
2000021e:	223f      	movs	r2, #63	; 0x3f
20000220:	701a      	strb	r2, [r3, #0]
20000222:	e07a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x1) *GPIO_ODR_LOW = 0x06; 
20000224:	1dfb      	adds	r3, r7, #7
20000226:	781b      	ldrb	r3, [r3, #0]
20000228:	2b01      	cmp	r3, #1
2000022a:	d103      	bne.n	20000234 <updateDisplay+0x2c>
2000022c:	4b3d      	ldr	r3, [pc, #244]	; (20000324 <updateDisplay+0x11c>)
2000022e:	2206      	movs	r2, #6
20000230:	701a      	strb	r2, [r3, #0]
20000232:	e072      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x2) *GPIO_ODR_LOW = 0x5B;  
20000234:	1dfb      	adds	r3, r7, #7
20000236:	781b      	ldrb	r3, [r3, #0]
20000238:	2b02      	cmp	r3, #2
2000023a:	d103      	bne.n	20000244 <updateDisplay+0x3c>
2000023c:	4b39      	ldr	r3, [pc, #228]	; (20000324 <updateDisplay+0x11c>)
2000023e:	225b      	movs	r2, #91	; 0x5b
20000240:	701a      	strb	r2, [r3, #0]
20000242:	e06a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x3) *GPIO_ODR_LOW = 0x4F;  
20000244:	1dfb      	adds	r3, r7, #7
20000246:	781b      	ldrb	r3, [r3, #0]
20000248:	2b03      	cmp	r3, #3
2000024a:	d103      	bne.n	20000254 <updateDisplay+0x4c>
2000024c:	4b35      	ldr	r3, [pc, #212]	; (20000324 <updateDisplay+0x11c>)
2000024e:	224f      	movs	r2, #79	; 0x4f
20000250:	701a      	strb	r2, [r3, #0]
20000252:	e062      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x4) *GPIO_ODR_LOW = 0x66;  
20000254:	1dfb      	adds	r3, r7, #7
20000256:	781b      	ldrb	r3, [r3, #0]
20000258:	2b04      	cmp	r3, #4
2000025a:	d103      	bne.n	20000264 <updateDisplay+0x5c>
2000025c:	4b31      	ldr	r3, [pc, #196]	; (20000324 <updateDisplay+0x11c>)
2000025e:	2266      	movs	r2, #102	; 0x66
20000260:	701a      	strb	r2, [r3, #0]
20000262:	e05a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x5) *GPIO_ODR_LOW = 0x6D;  
20000264:	1dfb      	adds	r3, r7, #7
20000266:	781b      	ldrb	r3, [r3, #0]
20000268:	2b05      	cmp	r3, #5
2000026a:	d103      	bne.n	20000274 <updateDisplay+0x6c>
2000026c:	4b2d      	ldr	r3, [pc, #180]	; (20000324 <updateDisplay+0x11c>)
2000026e:	226d      	movs	r2, #109	; 0x6d
20000270:	701a      	strb	r2, [r3, #0]
20000272:	e052      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x6) *GPIO_ODR_LOW = 0x7D;  
20000274:	1dfb      	adds	r3, r7, #7
20000276:	781b      	ldrb	r3, [r3, #0]
20000278:	2b06      	cmp	r3, #6
2000027a:	d103      	bne.n	20000284 <updateDisplay+0x7c>
2000027c:	4b29      	ldr	r3, [pc, #164]	; (20000324 <updateDisplay+0x11c>)
2000027e:	227d      	movs	r2, #125	; 0x7d
20000280:	701a      	strb	r2, [r3, #0]
20000282:	e04a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x7) *GPIO_ODR_LOW = 0x07;  
20000284:	1dfb      	adds	r3, r7, #7
20000286:	781b      	ldrb	r3, [r3, #0]
20000288:	2b07      	cmp	r3, #7
2000028a:	d103      	bne.n	20000294 <updateDisplay+0x8c>
2000028c:	4b25      	ldr	r3, [pc, #148]	; (20000324 <updateDisplay+0x11c>)
2000028e:	2207      	movs	r2, #7
20000290:	701a      	strb	r2, [r3, #0]
20000292:	e042      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x8) *GPIO_ODR_LOW = 0x7F;  
20000294:	1dfb      	adds	r3, r7, #7
20000296:	781b      	ldrb	r3, [r3, #0]
20000298:	2b08      	cmp	r3, #8
2000029a:	d103      	bne.n	200002a4 <updateDisplay+0x9c>
2000029c:	4b21      	ldr	r3, [pc, #132]	; (20000324 <updateDisplay+0x11c>)
2000029e:	227f      	movs	r2, #127	; 0x7f
200002a0:	701a      	strb	r2, [r3, #0]
200002a2:	e03a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0x9) *GPIO_ODR_LOW = 0x67;  
200002a4:	1dfb      	adds	r3, r7, #7
200002a6:	781b      	ldrb	r3, [r3, #0]
200002a8:	2b09      	cmp	r3, #9
200002aa:	d103      	bne.n	200002b4 <updateDisplay+0xac>
200002ac:	4b1d      	ldr	r3, [pc, #116]	; (20000324 <updateDisplay+0x11c>)
200002ae:	2267      	movs	r2, #103	; 0x67
200002b0:	701a      	strb	r2, [r3, #0]
200002b2:	e032      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xA) *GPIO_ODR_LOW = 0x77;  
200002b4:	1dfb      	adds	r3, r7, #7
200002b6:	781b      	ldrb	r3, [r3, #0]
200002b8:	2b0a      	cmp	r3, #10
200002ba:	d103      	bne.n	200002c4 <updateDisplay+0xbc>
200002bc:	4b19      	ldr	r3, [pc, #100]	; (20000324 <updateDisplay+0x11c>)
200002be:	2277      	movs	r2, #119	; 0x77
200002c0:	701a      	strb	r2, [r3, #0]
200002c2:	e02a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xB) *GPIO_ODR_LOW = 0xFF;  
200002c4:	1dfb      	adds	r3, r7, #7
200002c6:	781b      	ldrb	r3, [r3, #0]
200002c8:	2b0b      	cmp	r3, #11
200002ca:	d103      	bne.n	200002d4 <updateDisplay+0xcc>
200002cc:	4b15      	ldr	r3, [pc, #84]	; (20000324 <updateDisplay+0x11c>)
200002ce:	22ff      	movs	r2, #255	; 0xff
200002d0:	701a      	strb	r2, [r3, #0]
200002d2:	e022      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xC) *GPIO_ODR_LOW = 0x39;  
200002d4:	1dfb      	adds	r3, r7, #7
200002d6:	781b      	ldrb	r3, [r3, #0]
200002d8:	2b0c      	cmp	r3, #12
200002da:	d103      	bne.n	200002e4 <updateDisplay+0xdc>
200002dc:	4b11      	ldr	r3, [pc, #68]	; (20000324 <updateDisplay+0x11c>)
200002de:	2239      	movs	r2, #57	; 0x39
200002e0:	701a      	strb	r2, [r3, #0]
200002e2:	e01a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xD) *GPIO_ODR_LOW = 0xBF;  
200002e4:	1dfb      	adds	r3, r7, #7
200002e6:	781b      	ldrb	r3, [r3, #0]
200002e8:	2b0d      	cmp	r3, #13
200002ea:	d103      	bne.n	200002f4 <updateDisplay+0xec>
200002ec:	4b0d      	ldr	r3, [pc, #52]	; (20000324 <updateDisplay+0x11c>)
200002ee:	22bf      	movs	r2, #191	; 0xbf
200002f0:	701a      	strb	r2, [r3, #0]
200002f2:	e012      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xE) *GPIO_ODR_LOW = 0x79;  
200002f4:	1dfb      	adds	r3, r7, #7
200002f6:	781b      	ldrb	r3, [r3, #0]
200002f8:	2b0e      	cmp	r3, #14
200002fa:	d103      	bne.n	20000304 <updateDisplay+0xfc>
200002fc:	4b09      	ldr	r3, [pc, #36]	; (20000324 <updateDisplay+0x11c>)
200002fe:	2279      	movs	r2, #121	; 0x79
20000300:	701a      	strb	r2, [r3, #0]
20000302:	e00a      	b.n	2000031a <updateDisplay+0x112>
	else if(key == 0xF) *GPIO_ODR_LOW = 0x71;
20000304:	1dfb      	adds	r3, r7, #7
20000306:	781b      	ldrb	r3, [r3, #0]
20000308:	2b0f      	cmp	r3, #15
2000030a:	d103      	bne.n	20000314 <updateDisplay+0x10c>
2000030c:	4b05      	ldr	r3, [pc, #20]	; (20000324 <updateDisplay+0x11c>)
2000030e:	2271      	movs	r2, #113	; 0x71
20000310:	701a      	strb	r2, [r3, #0]
20000312:	e002      	b.n	2000031a <updateDisplay+0x112>
	else *GPIO_ODR_LOW = 0x00;
20000314:	4b03      	ldr	r3, [pc, #12]	; (20000324 <updateDisplay+0x11c>)
20000316:	2200      	movs	r2, #0
20000318:	701a      	strb	r2, [r3, #0]
}
2000031a:	46c0      	nop			; (mov r8, r8)
2000031c:	0018      	movs	r0, r3
2000031e:	46bd      	mov	sp, r7
20000320:	b002      	add	sp, #8
20000322:	bd80      	pop	{r7, pc}
20000324:	40020c14 	andmi	r0, r2, r4, lsl ip

20000328 <main>:

void main(void) {
20000328:	b590      	push	{r4, r7, lr}
2000032a:	b083      	sub	sp, #12
2000032c:	af00      	add	r7, sp, #0
	app_init();
2000032e:	f7ff fe6f 	bl	20000010 <app_init>
	while(1) {
		unsigned char i = keyb();
20000332:	1dfc      	adds	r4, r7, #7
20000334:	f7ff ff22 	bl	2000017c <keyb>
20000338:	0003      	movs	r3, r0
2000033a:	7023      	strb	r3, [r4, #0]
		updateDisplay(i);
2000033c:	1dfb      	adds	r3, r7, #7
2000033e:	781b      	ldrb	r3, [r3, #0]
20000340:	0018      	movs	r0, r3
20000342:	f7ff ff61 	bl	20000208 <updateDisplay>
	while(1) {
20000346:	e7f4      	b.n	20000332 <main+0xa>
20000348:	200000f6 	strdcs	r0, [r0], -r6
2000034c:	200000fe 	strdcs	r0, [r0], -lr
20000350:	20000106 	andcs	r0, r0, r6, lsl #2
20000354:	2000010e 	andcs	r0, r0, lr, lsl #2
20000358:	20000116 	andcs	r0, r0, r6, lsl r1
2000035c:	0a030201 	beq	200c0b68 <main+0xc0840>
20000360:	0b060504 	bleq	20181778 <main+0x181450>
20000364:	0c090807 	stceq	8, cr0, [r9], {7}
20000368:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000338 <main+0x10>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000015d 	andeq	r0, r0, sp, asr r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000076 	andeq	r0, r0, r6, ror r0
  10:	0000050c 	andeq	r0, r0, ip, lsl #10
	...
  20:	011c0200 	tsteq	ip, r0, lsl #4
  24:	64010000 	strvs	r0, [r1], #-0
  28:	20000328 	andcs	r0, r0, r8, lsr #6
  2c:	00000020 	andeq	r0, r0, r0, lsr #32
  30:	004d9c01 	subeq	r9, sp, r1, lsl #24
  34:	32030000 	andcc	r0, r3, #0
  38:	14200003 	strtne	r0, [r0], #-3
  3c:	04000000 	streq	r0, [r0], #-0
  40:	67010069 	strvs	r0, [r1, -r9, rrx]
  44:	0000004d 	andeq	r0, r0, sp, asr #32
  48:	006f9102 	rsbeq	r9, pc, r2, lsl #2
  4c:	08010500 	stmdaeq	r1, {r8, sl}
  50:	0000010e 	andeq	r0, r0, lr, lsl #2
  54:	00005006 	andeq	r5, r0, r6
  58:	4d500100 	ldfmie	f0, [r0, #-0]
  5c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  60:	20200002 	eorcs	r0, r0, r2
  64:	01000001 	tsteq	r0, r1
  68:	00007c9c 	muleq	r0, ip, ip
  6c:	656b0700 	strbvs	r0, [fp, #-1792]!	; 0xfffff900
  70:	50010079 	andpl	r0, r1, r9, ror r0
  74:	0000004d 	andeq	r0, r0, sp, asr #32
  78:	00779102 	rsbseq	r9, r7, r2, lsl #2
  7c:	00000008 	andeq	r0, r0, r8
  80:	4d420100 	stfmie	f0, [r2, #-0]
  84:	7c000000 	stcvc	0, cr0, [r0], {-0}
  88:	8c200001 	stchi	0, cr0, [r0], #-4
  8c:	01000000 	mrseq	r0, (UNDEF: 0)
  90:	0000d49c 	muleq	r0, ip, r4
  94:	004b0900 	subeq	r0, fp, r0, lsl #18
  98:	43010000 	movwmi	r0, #4096	; 0x1000
  9c:	000000d4 	ldrdeq	r0, [r0], -r4
  a0:	035c9102 	cmpeq	ip, #-2147483648	; 0x80000000
  a4:	2000018e 	andcs	r0, r0, lr, lsl #3
  a8:	00000064 	andeq	r0, r0, r4, rrx
  ac:	776f7204 	strbvc	r7, [pc, -r4, lsl #4]!
  b0:	eb440100 	bl	11004b8 <startup-0x1eeffb48>
  b4:	02000000 	andeq	r0, r0, #0
  b8:	98036f91 	stmdals	r3, {r0, r4, r7, r8, r9, sl, fp, sp, lr}
  bc:	42200001 	eormi	r0, r0, #1
  c0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  c4:	0000005e 	andeq	r0, r0, lr, asr r0
  c8:	00eb4601 	rsceq	r4, fp, r1, lsl #12
  cc:	91020000 	mrsls	r0, (UNDEF: 2)
  d0:	0000006e 	andeq	r0, r0, lr, rrx
  d4:	00004d0a 	andeq	r4, r0, sl, lsl #26
  d8:	0000e400 	andeq	lr, r0, r0, lsl #8
  dc:	00e40b00 	rsceq	r0, r4, r0, lsl #22
  e0:	000f0000 	andeq	r0, pc, r0
  e4:	65070405 	strvs	r0, [r7, #-1029]	; 0xfffffbfb
  e8:	05000000 	streq	r0, [r0, #-0]
  ec:	01170801 	tsteq	r7, r1, lsl #16
  f0:	40060000 	andmi	r0, r6, r0
  f4:	01000000 	mrseq	r0, (UNDEF: 0)
  f8:	00004d39 	andeq	r4, r0, r9, lsr sp
  fc:	00013000 	andeq	r3, r1, r0
 100:	00004c20 	andeq	r4, r0, r0, lsr #24
 104:	1a9c0100 	bne	fe70050c <main+0xde7001e4>
 108:	04000001 	streq	r0, [r0], #-1
 10c:	00726469 	rsbseq	r6, r2, r9, ror #8
 110:	004d3a01 	subeq	r3, sp, r1, lsl #20
 114:	91020000 	mrsls	r0, (UNDEF: 2)
 118:	210c0077 	tstcs	ip, r7, ror r0
 11c:	01000001 	tsteq	r0, r1
 120:	0000d82f 	andeq	sp, r0, pc, lsr #16
 124:	00005820 	andeq	r5, r0, r0, lsr #16
 128:	3e9c0100 	fmlcce	f0, f4, f0
 12c:	07000001 	streq	r0, [r0, -r1]
 130:	00776f72 	rsbseq	r6, r7, r2, ror pc
 134:	004d2f01 	subeq	r2, sp, r1, lsl #30
 138:	91020000 	mrsls	r0, (UNDEF: 2)
 13c:	2d0d0077 	stccs	0, cr0, [sp, #-476]	; 0xfffffe24
 140:	01000001 	tsteq	r0, r1
 144:	00001018 	andeq	r1, r0, r8, lsl r0
 148:	0000c820 	andeq	ip, r0, r0, lsr #16
 14c:	0d9c0100 	ldfeqs	f0, [ip]
 150:	0000006e 	andeq	r0, r0, lr, rrx
 154:	00000f01 	andeq	r0, r0, r1, lsl #30
 158:	000c2000 	andeq	r2, ip, r0
 15c:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
  14:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	01111927 	tsteq	r1, r7, lsr #18
  20:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  24:	01194296 			; <UNDEFINED> instruction: 0x01194296
  28:	03000013 	movweq	r0, #19
  2c:	0111010b 	tsteq	r1, fp, lsl #2
  30:	00000612 	andeq	r0, r0, r2, lsl r6
  34:	03003404 	movweq	r3, #1028	; 0x404
  38:	3b0b3a08 	blcc	2ce860 <startup-0x1fd317a0>
  3c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  40:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
  44:	0b0b0024 	bleq	2c00dc <startup-0x1fd3ff24>
  48:	0e030b3e 	vmoveq.16	d3[0], r0
  4c:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
  50:	03193f01 	tsteq	r9, #1, 30
  54:	3b0b3a0e 	blcc	2ce894 <startup-0x1fd3176c>
  58:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  5c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  60:	97184006 	ldrls	r4, [r8, -r6]
  64:	13011942 	movwne	r1, #6466	; 0x1942
  68:	05070000 	streq	r0, [r7, #-0]
  6c:	3a080300 	bcc	200c74 <startup-0x1fdff38c>
  70:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  74:	00180213 	andseq	r0, r8, r3, lsl r2
  78:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
  7c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  80:	0b3b0b3a 	bleq	ec2d70 <startup-0x1f13d290>
  84:	13491927 	movtne	r1, #39207	; 0x9927
  88:	06120111 			; <UNDEFINED> instruction: 0x06120111
  8c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  90:	00130119 	andseq	r0, r3, r9, lsl r1
  94:	00340900 	eorseq	r0, r4, r0, lsl #18
  98:	0b3a0e03 	bleq	e838ac <startup-0x1f17c754>
  9c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  a0:	00001802 	andeq	r1, r0, r2, lsl #16
  a4:	4901010a 	stmdbmi	r1, {r1, r3, r8}
  a8:	00130113 	andseq	r0, r3, r3, lsl r1
  ac:	00210b00 	eoreq	r0, r1, r0, lsl #22
  b0:	0b2f1349 	bleq	bc4ddc <startup-0x1f43b224>
  b4:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
  b8:	03193f01 	tsteq	r9, #1, 30
  bc:	3b0b3a0e 	blcc	2ce8fc <startup-0x1fd31704>
  c0:	1119270b 	tstne	r9, fp, lsl #14
  c4:	40061201 	andmi	r1, r6, r1, lsl #4
  c8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  cc:	00001301 	andeq	r1, r0, r1, lsl #6
  d0:	3f002e0d 	svccc	0x00002e0d
  d4:	3a0e0319 	bcc	380d40 <startup-0x1fc7f2c0>
  d8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  dc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  e0:	97184006 	ldrls	r4, [r8, -r6]
  e4:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000338 	andeq	r0, r0, r8, lsr r3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000348 	andcs	r0, r0, r8, asr #6
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000015f 	andeq	r0, r0, pc, asr r1
   4:	00510002 	subseq	r0, r1, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	706d6148 	rsbvc	r6, sp, r8, asr #2
  28:	442f7375 	strtmi	r7, [pc], #-885	; 30 <startup-0x1fffffd0>
  2c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  30:	442f706f 	strtmi	r7, [pc], #-111	; 38 <startup-0x1fffffc8>
  34:	31305441 	teqcc	r0, r1, asr #8
  38:	6f432f37 	svcvs	0x00432f37
  3c:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
  40:	6b2f6574 	blvs	bd9618 <startup-0x1f4269e8>
  44:	6f627965 	svcvs	0x00627965
  48:	00647261 	rsbeq	r7, r4, r1, ror #4
  4c:	61747300 	cmnvs	r4, r0, lsl #6
  50:	70757472 	rsbsvc	r7, r5, r2, ror r4
  54:	0100632e 	tsteq	r0, lr, lsr #6
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000205 	andeq	r0, r0, r5, lsl #4
  60:	0e032000 	cdpeq	0, 0, cr2, cr3, cr0, {0}
  64:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
  68:	01010003 	tsteq	r1, r3
  6c:	10020500 	andne	r0, r2, r0, lsl #10
  70:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  74:	67310117 			; <UNDEFINED> instruction: 0x67310117
  78:	67928376 			; <UNDEFINED> instruction: 0x67928376
  7c:	83686769 	cmnhi	r8, #27525120	; 0x1a40000
  80:	f4676784 	vld1.32	{d22}, [r7], r4
  84:	4b4b9167 	blmi	12e4628 <startup-0x1ed1b9d8>
  88:	924c4b4b 	subls	r4, ip, #76800	; 0x12c00
  8c:	02004b3d 	andeq	r4, r0, #62464	; 0xf400
  90:	4a060104 	bmi	1804a8 <startup-0x1fe7fb58>
  94:	02002f06 	andeq	r2, r0, #6, 30
  98:	4a060104 	bmi	1804b0 <startup-0x1fe7fb50>
  9c:	02002f06 	andeq	r2, r0, #6, 30
  a0:	4a060104 	bmi	1804b8 <startup-0x1fe7fb48>
  a4:	02002f06 	andeq	r2, r0, #6, 30
  a8:	4a060104 	bmi	1804c0 <startup-0x1fe7fb40>
  ac:	68212f06 	stmdavs	r1!, {r1, r2, r8, r9, sl, fp, sp}
  b0:	6759673d 	smmlarvs	r9, sp, r7, r6
  b4:	003d5967 	eorseq	r5, sp, r7, ror #18
  b8:	c3020402 	movwgt	r0, #9218	; 0x2402
  bc:	01040200 	mrseq	r0, R12_usr
  c0:	60067406 	andvs	r7, r6, r6, lsl #8
  c4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  c8:	67762101 	ldrbvs	r2, [r6, -r1, lsl #2]!
  cc:	01040200 	mrseq	r0, R12_usr
  d0:	4b064a06 	blmi	1928f0 <startup-0x1fe6d710>
  d4:	01040200 	mrseq	r0, R12_usr
  d8:	4b064a06 	blmi	1928f8 <startup-0x1fe6d708>
  dc:	01040200 	mrseq	r0, R12_usr
  e0:	4b064a06 	blmi	192900 <startup-0x1fe6d700>
  e4:	01040200 	mrseq	r0, R12_usr
  e8:	4b064a06 	blmi	192908 <startup-0x1fe6d6f8>
  ec:	01040200 	mrseq	r0, R12_usr
  f0:	4b064a06 	blmi	192910 <startup-0x1fe6d6f0>
  f4:	01040200 	mrseq	r0, R12_usr
  f8:	4b064a06 	blmi	192918 <startup-0x1fe6d6e8>
  fc:	01040200 	mrseq	r0, R12_usr
 100:	4b064a06 	blmi	192920 <startup-0x1fe6d6e0>
 104:	01040200 	mrseq	r0, R12_usr
 108:	4b064a06 	blmi	192928 <startup-0x1fe6d6d8>
 10c:	01040200 	mrseq	r0, R12_usr
 110:	4b064a06 	blmi	192930 <startup-0x1fe6d6d0>
 114:	01040200 	mrseq	r0, R12_usr
 118:	4b064a06 	blmi	192938 <startup-0x1fe6d6c8>
 11c:	01040200 	mrseq	r0, R12_usr
 120:	4b064a06 	blmi	192940 <startup-0x1fe6d6c0>
 124:	01040200 	mrseq	r0, R12_usr
 128:	4b064a06 	blmi	192948 <startup-0x1fe6d6b8>
 12c:	01040200 	mrseq	r0, R12_usr
 130:	4b064a06 	blmi	192950 <startup-0x1fe6d6b0>
 134:	01040200 	mrseq	r0, R12_usr
 138:	4b064a06 	blmi	192958 <startup-0x1fe6d6a8>
 13c:	01040200 	mrseq	r0, R12_usr
 140:	4b064a06 	blmi	192960 <startup-0x1fe6d6a0>
 144:	01040200 	mrseq	r0, R12_usr
 148:	4b064a06 	blmi	192968 <startup-0x1fe6d698>
 14c:	003d763d 	eorseq	r7, sp, sp, lsr r6
 150:	30010402 	andcc	r0, r1, r2, lsl #8
 154:	01040200 	mrseq	r0, R12_usr
 158:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
 15c:	01025601 	tsteq	r2, r1, lsl #12
 160:	Address 0x00000160 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6279656b 	rsbsvs	r6, r9, #448790528	; 0x1ac00000
   4:	2f3a4300 	svccs	0x003a4300
   8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
   c:	61482f73 	hvcvs	33523	; 0x82f3
  10:	7375706d 	cmnvc	r5, #109	; 0x6d
  14:	7365442f 	cmnvc	r5, #788529152	; 0x2f000000
  18:	706f746b 	rsbvc	r7, pc, fp, ror #8
  1c:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  20:	2f373130 	svccs	0x00373130
  24:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
  28:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
  2c:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  30:	72616f62 	rsbvc	r6, r1, #392	; 0x188
  34:	74732f64 	ldrbtvc	r2, [r3], #-3940	; 0xfffff09c
  38:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  3c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  40:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
  44:	756c6f43 	strbvc	r6, [ip, #-3907]!	; 0xfffff0bd
  48:	6b006e6d 	blvs	1ba04 <startup-0x1ffe45fc>
  4c:	00737965 	rsbseq	r7, r3, r5, ror #18
  50:	61647075 	smcvs	18181	; 0x4705
  54:	69446574 	stmdbvs	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
  58:	616c7073 	smcvs	50947	; 0xc703
  5c:	6f630079 	svcvs	0x00630079
  60:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  64:	7a697300 	bvc	1a5cc6c <startup-0x1e5a3394>
  68:	70797465 	rsbsvc	r7, r9, r5, ror #8
  6c:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
  70:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  74:	4e470070 	mcrmi	0, 2, r0, cr7, cr0, {3}
  78:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  7c:	2e362039 	mrccs	0, 1, r2, cr6, cr9, {1}
  80:	20312e33 	eorscs	r2, r1, r3, lsr lr
  84:	37313032 			; <UNDEFINED> instruction: 0x37313032
  88:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  8c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  90:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  94:	5b202965 	blpl	80a630 <startup-0x1f7f59d0>
  98:	2f4d5241 	svccs	0x004d5241
  9c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  a0:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  a4:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  a8:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  ac:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  b0:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  b4:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  b8:	31353534 	teqcc	r5, r4, lsr r5
  bc:	2d205d32 	stccs	13, cr5, [r0, #-200]!	; 0xffffff38
  c0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  c4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  c8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  cc:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  d0:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  d4:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  d8:	616f6c66 	cmnvs	pc, r6, ror #24
  dc:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  e0:	6f733d69 	svcvs	0x00733d69
  e4:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  e8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  ec:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  f0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  f4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  f8:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  fc:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 100:	304f2d20 	subcc	r2, pc, r0, lsr #26
 104:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 108:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 10c:	6e750039 	mrcvs	0, 3, r0, cr5, cr9, {1}
 110:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 114:	63206465 			; <UNDEFINED> instruction: 0x63206465
 118:	00726168 	rsbseq	r6, r2, r8, ror #2
 11c:	6e69616d 	powvsez	f6, f1, #5.0
 120:	74636100 	strbtvc	r6, [r3], #-256	; 0xffffff00
 124:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 128:	776f5265 	strbvc	r5, [pc, -r5, ror #4]!
 12c:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 130:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 134:	Address 0x00000134 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000000c8 	andeq	r0, r0, r8, asr #1
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000d8 	ldrdcs	r0, [r0], -r8
  48:	00000058 	andeq	r0, r0, r8, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000130 	andcs	r0, r0, r0, lsr r1
  68:	0000004c 	andeq	r0, r0, ip, asr #32
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	00000020 	andeq	r0, r0, r0, lsr #32
  80:	00000000 	andeq	r0, r0, r0
  84:	2000017c 	andcs	r0, r0, ip, ror r1
  88:	0000008c 	andeq	r0, r0, ip, lsl #1
  8c:	400c0e41 	andmi	r0, ip, r1, asr #28
  90:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  94:	018e4002 	orreq	r4, lr, r2
  98:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  9c:	0000070d 	andeq	r0, r0, sp, lsl #14
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	00000000 	andeq	r0, r0, r0
  a8:	20000208 	andcs	r0, r0, r8, lsl #4
  ac:	00000120 	andeq	r0, r0, r0, lsr #2
  b0:	40080e41 	andmi	r0, r8, r1, asr #28
  b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b8:	100e4101 	andne	r4, lr, r1, lsl #2
  bc:	00070d41 	andeq	r0, r7, r1, asr #26
  c0:	00000020 	andeq	r0, r0, r0, lsr #32
  c4:	00000000 	andeq	r0, r0, r0
  c8:	20000328 	andcs	r0, r0, r8, lsr #6
  cc:	00000020 	andeq	r0, r0, r0, lsr #32
  d0:	400c0e41 	andmi	r0, ip, r1, asr #28
  d4:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  d8:	018e4002 	orreq	r4, lr, r2
  dc:	41180e41 	tstmi	r8, r1, asr #28
  e0:	0000070d 	andeq	r0, r0, sp, lsl #14
