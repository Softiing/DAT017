
./Debug/flipflop_irq_2.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f856 	bl	200000b4 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <interrupt_handler>:

#define portD ((GPIO*) 0x40020C00)

unsigned int count = 0;

void interrupt_handler() {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	count++;
20000014:	4b06      	ldr	r3, [pc, #24]	; (20000030 <interrupt_handler+0x20>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	1c5a      	adds	r2, r3, #1
2000001a:	4b05      	ldr	r3, [pc, #20]	; (20000030 <interrupt_handler+0x20>)
2000001c:	601a      	str	r2, [r3, #0]
	*((unsigned int *) 0x40013C14) |= (1<<3);
2000001e:	4b05      	ldr	r3, [pc, #20]	; (20000034 <interrupt_handler+0x24>)
20000020:	4a04      	ldr	r2, [pc, #16]	; (20000034 <interrupt_handler+0x24>)
20000022:	6812      	ldr	r2, [r2, #0]
20000024:	2108      	movs	r1, #8
20000026:	430a      	orrs	r2, r1
20000028:	601a      	str	r2, [r3, #0]
}
2000002a:	46c0      	nop			; (mov r8, r8)
2000002c:	46bd      	mov	sp, r7
2000002e:	bd80      	pop	{r7, pc}
20000030:	200000e4 	andcs	r0, r0, r4, ror #1
20000034:	40013c14 	andmi	r3, r1, r4, lsl ip

20000038 <init>:


void init() {
20000038:	b580      	push	{r7, lr}
2000003a:	af00      	add	r7, sp, #0
	// Set port D_low as output
	portD->moder = 0x5555;
2000003c:	4b15      	ldr	r3, [pc, #84]	; (20000094 <init+0x5c>)
2000003e:	4a16      	ldr	r2, [pc, #88]	; (20000098 <init+0x60>)
20000040:	601a      	str	r2, [r3, #0]
	
	// Set exception line for PE3 to EXTI3
	*((unsigned short *) 0x40013808) &= 0x0FFF;
20000042:	4a16      	ldr	r2, [pc, #88]	; (2000009c <init+0x64>)
20000044:	4b15      	ldr	r3, [pc, #84]	; (2000009c <init+0x64>)
20000046:	881b      	ldrh	r3, [r3, #0]
20000048:	051b      	lsls	r3, r3, #20
2000004a:	0d1b      	lsrs	r3, r3, #20
2000004c:	b29b      	uxth	r3, r3
2000004e:	8013      	strh	r3, [r2, #0]
	*((unsigned short *) 0x40013808) |= 0x4000;
20000050:	4912      	ldr	r1, [pc, #72]	; (2000009c <init+0x64>)
20000052:	4b12      	ldr	r3, [pc, #72]	; (2000009c <init+0x64>)
20000054:	881b      	ldrh	r3, [r3, #0]
20000056:	2280      	movs	r2, #128	; 0x80
20000058:	01d2      	lsls	r2, r2, #7
2000005a:	4313      	orrs	r3, r2
2000005c:	b29b      	uxth	r3, r3
2000005e:	800b      	strh	r3, [r1, #0]
	
	// Enable exceptions on EXTI3
	*((unsigned int *) 0x40013C00) |= (1<<3);
20000060:	4b0f      	ldr	r3, [pc, #60]	; (200000a0 <init+0x68>)
20000062:	4a0f      	ldr	r2, [pc, #60]	; (200000a0 <init+0x68>)
20000064:	6812      	ldr	r2, [r2, #0]
20000066:	2108      	movs	r1, #8
20000068:	430a      	orrs	r2, r1
2000006a:	601a      	str	r2, [r3, #0]
	
	// Enable trigger on negative flank on EXTI3
	*((unsigned int *) 0x40013C0C) |= (1<<3);
2000006c:	4b0d      	ldr	r3, [pc, #52]	; (200000a4 <init+0x6c>)
2000006e:	4a0d      	ldr	r2, [pc, #52]	; (200000a4 <init+0x6c>)
20000070:	6812      	ldr	r2, [r2, #0]
20000072:	2108      	movs	r1, #8
20000074:	430a      	orrs	r2, r1
20000076:	601a      	str	r2, [r3, #0]
	
	// Set interrupt handler
	*((void (**) (void)) 0x2001C064) = interrupt_handler;
20000078:	4b0b      	ldr	r3, [pc, #44]	; (200000a8 <init+0x70>)
2000007a:	4a0c      	ldr	r2, [pc, #48]	; (200000ac <init+0x74>)
2000007c:	601a      	str	r2, [r3, #0]
	
	//Enable PE3 in NVIC
	*((unsigned int *) 0xE000E100) |= (1<<9);
2000007e:	4b0c      	ldr	r3, [pc, #48]	; (200000b0 <init+0x78>)
20000080:	4a0b      	ldr	r2, [pc, #44]	; (200000b0 <init+0x78>)
20000082:	6812      	ldr	r2, [r2, #0]
20000084:	2180      	movs	r1, #128	; 0x80
20000086:	0089      	lsls	r1, r1, #2
20000088:	430a      	orrs	r2, r1
2000008a:	601a      	str	r2, [r3, #0]

	
}
2000008c:	46c0      	nop			; (mov r8, r8)
2000008e:	46bd      	mov	sp, r7
20000090:	bd80      	pop	{r7, pc}
20000092:	46c0      	nop			; (mov r8, r8)
20000094:	40020c00 	andmi	r0, r2, r0, lsl #24
20000098:	00005555 	andeq	r5, r0, r5, asr r5
2000009c:	40013808 	andmi	r3, r1, r8, lsl #16
200000a0:	40013c00 	andmi	r3, r1, r0, lsl #24
200000a4:	40013c0c 	andmi	r3, r1, ip, lsl #24
200000a8:	2001c064 	andcs	ip, r1, r4, rrx
200000ac:	20000011 	andcs	r0, r0, r1, lsl r0
200000b0:	e000e100 	and	lr, r0, r0, lsl #2

200000b4 <main>:

void main(void) {
200000b4:	b580      	push	{r7, lr}
200000b6:	af00      	add	r7, sp, #0
	init();
200000b8:	f7ff ffbe 	bl	20000038 <init>
	while(1) {
		portD->odr_low = count;
200000bc:	4a07      	ldr	r2, [pc, #28]	; (200000dc <main+0x28>)
200000be:	4b08      	ldr	r3, [pc, #32]	; (200000e0 <main+0x2c>)
200000c0:	681b      	ldr	r3, [r3, #0]
200000c2:	b29b      	uxth	r3, r3
200000c4:	8293      	strh	r3, [r2, #20]
		portD->odr_low = count;
200000c6:	4a05      	ldr	r2, [pc, #20]	; (200000dc <main+0x28>)
200000c8:	4b05      	ldr	r3, [pc, #20]	; (200000e0 <main+0x2c>)
200000ca:	681b      	ldr	r3, [r3, #0]
200000cc:	b29b      	uxth	r3, r3
200000ce:	8293      	strh	r3, [r2, #20]
		portD->odr_low = count;
200000d0:	4a02      	ldr	r2, [pc, #8]	; (200000dc <main+0x28>)
200000d2:	4b03      	ldr	r3, [pc, #12]	; (200000e0 <main+0x2c>)
200000d4:	681b      	ldr	r3, [r3, #0]
200000d6:	b29b      	uxth	r3, r3
200000d8:	8293      	strh	r3, [r2, #20]
		portD->odr_low = count;
200000da:	e7ef      	b.n	200000bc <main+0x8>
200000dc:	40020c00 	andmi	r0, r2, r0, lsl #24
200000e0:	200000e4 	andcs	r0, r0, r4, ror #1

200000e4 <count>:
200000e4:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000007e 	andeq	r0, r0, lr, ror r0
  10:	0000080c 	andeq	r0, r0, ip, lsl #16
	...
  20:	01180200 	tsteq	r8, r0, lsl #4
  24:	00008a11 	andeq	r8, r0, r1, lsl sl
  28:	006f0300 	rsbeq	r0, pc, r0, lsl #6
  2c:	12010000 	andne	r0, r1, #0
  30:	00000091 	muleq	r0, r1, r0
  34:	00000300 	andeq	r0, r0, r0, lsl #6
  38:	13010000 	movwne	r0, #4096	; 0x1000
  3c:	00000091 	muleq	r0, r1, r0
  40:	01210304 			; <UNDEFINED> instruction: 0x01210304
  44:	14010000 	strne	r0, [r1], #-0
  48:	00000091 	muleq	r0, r1, r0
  4c:	00510308 	subseq	r0, r1, r8, lsl #6
  50:	15010000 	strne	r0, [r1, #-0]
  54:	00000091 	muleq	r0, r1, r0
  58:	0049030c 	subeq	r0, r9, ip, lsl #6
  5c:	16010000 	strne	r0, [r1], -r0
  60:	0000009d 	muleq	r0, sp, r0
  64:	00750310 	rsbseq	r0, r5, r0, lsl r3
  68:	17010000 	strne	r0, [r1, -r0]
  6c:	0000009d 	muleq	r0, sp, r0
  70:	01510312 	cmpeq	r1, r2, lsl r3
  74:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
  78:	0000009d 	muleq	r0, sp, r0
  7c:	01400314 	cmpeq	r0, r4, lsl r3
  80:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
  84:	0000009d 	muleq	r0, sp, r0
  88:	04040016 	streq	r0, [r4], #-22	; 0xffffffea
  8c:	00006207 	andeq	r6, r0, r7, lsl #4
  90:	008a0500 	addeq	r0, sl, r0, lsl #10
  94:	02040000 	andeq	r0, r4, #0
  98:	00005c07 	andeq	r5, r0, r7, lsl #24
  9c:	00960500 	addseq	r0, r6, r0, lsl #10
  a0:	16060000 	strne	r0, [r6], -r0
  a4:	01000001 	tsteq	r0, r1
  a8:	0000211b 	andeq	r2, r0, fp, lsl r1
  ac:	011b0700 	tsteq	fp, r0, lsl #14
  b0:	1f010000 	svcne	0x00010000
  b4:	0000008a 	andeq	r0, r0, sl, lsl #1
  b8:	00e40305 	rsceq	r0, r4, r5, lsl #6
  bc:	29082000 	stmdbcs	r8, {sp}
  c0:	01000001 	tsteq	r0, r1
  c4:	0000b43e 	andeq	fp, r0, lr, lsr r4
  c8:	00003020 	andeq	r3, r0, r0, lsr #32
  cc:	099c0100 	ldmibeq	ip, {r8}
  d0:	00000057 	andeq	r0, r0, r7, asr r0
  d4:	00382701 	eorseq	r2, r8, r1, lsl #14
  d8:	007c2000 	rsbseq	r2, ip, r0
  dc:	9c010000 	stcls	0, cr0, [r1], {-0}
  e0:	00012e09 	andeq	r2, r1, r9, lsl #28
  e4:	10210100 	eorne	r0, r1, r0, lsl #2
  e8:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
  ec:	01000000 	mrseq	r0, (UNDEF: 0)
  f0:	01490a9c 			; <UNDEFINED> instruction: 0x01490a9c
  f4:	07010000 	streq	r0, [r1, -r0]
  f8:	20000000 	andcs	r0, r0, r0
  fc:	0000000c 	andeq	r0, r0, ip
 100:	Address 0x00000100 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01130200 	tsteq	r3, r0, lsl #4
  14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
  18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  1c:	0d030000 	stceq	0, cr0, [r3, #-0]
  20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
  24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  28:	000b3813 	andeq	r3, fp, r3, lsl r8
  2c:	00240400 	eoreq	r0, r4, r0, lsl #8
  30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
  34:	00000e03 	andeq	r0, r0, r3, lsl #28
  38:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
  3c:	06000013 			; <UNDEFINED> instruction: 0x06000013
  40:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  44:	0b3b0b3a 	bleq	ec2d34 <startup-0x1f13d2cc>
  48:	00001349 	andeq	r1, r0, r9, asr #6
  4c:	03003407 	movweq	r3, #1031	; 0x407
  50:	3b0b3a0e 	blcc	2ce890 <startup-0x1fd31770>
  54:	3f13490b 	svccc	0x0013490b
  58:	00180219 	andseq	r0, r8, r9, lsl r2
  5c:	002e0800 	eoreq	r0, lr, r0, lsl #16
  60:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  64:	0b3b0b3a 	bleq	ec2d54 <startup-0x1f13d2ac>
  68:	01111927 	tsteq	r1, r7, lsr #18
  6c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  70:	00194296 	mulseq	r9, r6, r2
  74:	002e0900 	eoreq	r0, lr, r0, lsl #18
  78:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  7c:	0b3b0b3a 	bleq	ec2d6c <startup-0x1f13d294>
  80:	06120111 			; <UNDEFINED> instruction: 0x06120111
  84:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  88:	0a000019 	beq	f4 <startup-0x1fffff0c>
  8c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  90:	0b3a0e03 	bleq	e838a4 <startup-0x1f17c75c>
  94:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  98:	06120111 			; <UNDEFINED> instruction: 0x06120111
  9c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  a0:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000d4 	ldrdeq	r0, [r0], -r4
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200000e4 	andcs	r0, r0, r4, ror #1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000009e 	muleq	r0, lr, r0
   4:	00570002 	subseq	r0, r7, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	706d6148 	rsbvc	r6, sp, r8, asr #2
  28:	442f7375 	strtmi	r7, [pc], #-885	; 30 <startup-0x1fffffd0>
  2c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  30:	442f706f 	strtmi	r7, [pc], #-111	; 38 <startup-0x1fffffc8>
  34:	31305441 	teqcc	r0, r1, asr #8
  38:	6f432f37 	svcvs	0x00432f37
  3c:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
  40:	662f6574 			; <UNDEFINED> instruction: 0x662f6574
  44:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  48:	5f706f6c 	svcpl	0x00706f6c
  4c:	5f717269 	svcpl	0x00717269
  50:	73000032 	movwvc	r0, #50	; 0x32
  54:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  58:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  5c:	00000100 	andeq	r0, r0, r0, lsl #2
  60:	02050000 	andeq	r0, r5, #0
  64:	20000000 	andcs	r0, r0, r0
  68:	025e1319 	subseq	r1, lr, #1677721600	; 0x64000000
  6c:	01010003 	tsteq	r1, r3
  70:	10020500 	andne	r0, r2, r0, lsl #10
  74:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  78:	592f0120 	stmdbpl	pc!, {r5, r8}	; <UNPREDICTABLE>
  7c:	3f307767 	svccc	0x00307767
  80:	69698575 	stmdbvs	r9!, {r0, r2, r4, r5, r6, r8, sl, pc}^
  84:	3e08773f 	mcrcc	7, 0, r7, cr8, cr15, {1}
  88:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  8c:	02003001 	andeq	r3, r0, #1
  90:	00590104 	subseq	r0, r9, r4, lsl #2
  94:	59010402 	stmdbpl	r1, {r1, sl}
  98:	01040200 	mrseq	r0, R12_usr
  9c:	00050256 	andeq	r0, r5, r6, asr r2
  a0:	Address 0x000000a0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	7974736f 	ldmdbvc	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
   4:	00726570 	rsbseq	r6, r2, r0, ror r5
   8:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5cd <count+0xdffff4e9>
   c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  10:	6d61482f 	stclvs	8, cr4, [r1, #-188]!	; 0xffffff44
  14:	2f737570 	svccs	0x00737570
  18:	6b736544 	blvs	1cd9530 <startup-0x1e326ad0>
  1c:	2f706f74 	svccs	0x00706f74
  20:	30544144 	subscc	r4, r4, r4, asr #2
  24:	432f3731 			; <UNDEFINED> instruction: 0x432f3731
  28:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  2c:	2f657469 	svccs	0x00657469
  30:	70696c66 	rsbvc	r6, r9, r6, ror #24
  34:	706f6c66 	rsbvc	r6, pc, r6, ror #24
  38:	7172695f 	cmnvc	r2, pc, asr r9
  3c:	732f325f 			; <UNDEFINED> instruction: 0x732f325f
  40:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  44:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  48:	72646900 	rsbvc	r6, r4, #0, 18
  4c:	776f6c5f 			; <UNDEFINED> instruction: 0x776f6c5f
  50:	70757000 	rsbsvc	r7, r5, r0
  54:	69007264 	stmdbvs	r0, {r2, r5, r6, r9, ip, sp, lr}
  58:	0074696e 	rsbseq	r6, r4, lr, ror #18
  5c:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
  60:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
  64:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  68:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  6c:	6d00746e 	cfstrsvs	mvf7, [r0, #-440]	; 0xfffffe48
  70:	7265646f 	rsbvc	r6, r5, #1862270976	; 0x6f000000
  74:	72646900 	rsbvc	r6, r4, #0, 18
  78:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
  7c:	4e470068 	cdpmi	0, 4, cr0, cr7, cr8, {3}
  80:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  84:	2e362039 	mrccs	0, 1, r2, cr6, cr9, {1}
  88:	20312e33 	eorscs	r2, r1, r3, lsr lr
  8c:	37313032 			; <UNDEFINED> instruction: 0x37313032
  90:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  94:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  98:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  9c:	5b202965 	blpl	80a638 <startup-0x1f7f59c8>
  a0:	2f4d5241 	svccs	0x004d5241
  a4:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  a8:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  ac:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  b0:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  b4:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  b8:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  bc:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  c0:	31353534 	teqcc	r5, r4, lsr r5
  c4:	2d205d32 	stccs	13, cr5, [r0, #-200]!	; 0xffffff38
  c8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  cc:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  d0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  d4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  d8:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  dc:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  e0:	616f6c66 	cmnvs	pc, r6, ror #24
  e4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  e8:	6f733d69 	svcvs	0x00733d69
  ec:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  f0:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  f4:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  f8:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  fc:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 100:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 104:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 108:	304f2d20 	subcc	r2, pc, r0, lsr #26
 10c:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 110:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 114:	50470039 	subpl	r0, r7, r9, lsr r0
 118:	63004f49 	movwvs	r4, #3913	; 0xf49
 11c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 120:	70736f00 	rsbsvc	r6, r3, r0, lsl #30
 124:	72646565 	rsbvc	r6, r4, #423624704	; 0x19400000
 128:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 12c:	6e69006e 	cdpvs	0, 6, cr0, cr9, cr14, {3}
 130:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
 134:	5f747075 	svcpl	0x00747075
 138:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 13c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 140:	5f72646f 	svcpl	0x0072646f
 144:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
 148:	61747300 	cmnvs	r4, r0, lsl #6
 14c:	70757472 	rsbsvc	r7, r5, r2, ror r4
 150:	72646f00 	rsbvc	r6, r4, #0, 30
 154:	776f6c5f 			; <UNDEFINED> instruction: 0x776f6c5f
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000028 	andeq	r0, r0, r8, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000038 	andcs	r0, r0, r8, lsr r0
  48:	0000007c 	andeq	r0, r0, ip, ror r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	200000b4 	strhcs	r0, [r0], -r4
  64:	00000030 	andeq	r0, r0, r0, lsr r0
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	070d4101 	streq	r4, [sp, -r1, lsl #2]
