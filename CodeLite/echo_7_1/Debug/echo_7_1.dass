
./Debug/echo_7_1.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f842 	bl	2000008c <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <_tstchar>:
	volatile unsigned int gtpr;
} USART;

#define USART1 ((USART*) 0x40011000)

char _tstchar() {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	if((USART1->sr & (1<<5)) == 0) {
20000014:	4b06      	ldr	r3, [pc, #24]	; (20000030 <_tstchar+0x20>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	2220      	movs	r2, #32
2000001a:	4013      	ands	r3, r2
2000001c:	d101      	bne.n	20000022 <_tstchar+0x12>
		return 0;
2000001e:	2300      	movs	r3, #0
20000020:	e002      	b.n	20000028 <_tstchar+0x18>
	}
	return (char) USART1->dr;
20000022:	4b03      	ldr	r3, [pc, #12]	; (20000030 <_tstchar+0x20>)
20000024:	685b      	ldr	r3, [r3, #4]
20000026:	b2db      	uxtb	r3, r3
}
20000028:	0018      	movs	r0, r3
2000002a:	46bd      	mov	sp, r7
2000002c:	bd80      	pop	{r7, pc}
2000002e:	46c0      	nop			; (mov r8, r8)
20000030:	40011000 	andmi	r1, r1, r0

20000034 <_outchar>:

char _outchar(char c) {
20000034:	b580      	push	{r7, lr}
20000036:	b082      	sub	sp, #8
20000038:	af00      	add	r7, sp, #0
2000003a:	0002      	movs	r2, r0
2000003c:	1dfb      	adds	r3, r7, #7
2000003e:	701a      	strb	r2, [r3, #0]
	while((USART1->sr & (1<<7)) == 0);
20000040:	46c0      	nop			; (mov r8, r8)
20000042:	4b07      	ldr	r3, [pc, #28]	; (20000060 <_outchar+0x2c>)
20000044:	681b      	ldr	r3, [r3, #0]
20000046:	2280      	movs	r2, #128	; 0x80
20000048:	4013      	ands	r3, r2
2000004a:	d0fa      	beq.n	20000042 <_outchar+0xe>
	USART1->dr = (unsigned short) c;
2000004c:	4b04      	ldr	r3, [pc, #16]	; (20000060 <_outchar+0x2c>)
2000004e:	1dfa      	adds	r2, r7, #7
20000050:	7812      	ldrb	r2, [r2, #0]
20000052:	605a      	str	r2, [r3, #4]
}
20000054:	46c0      	nop			; (mov r8, r8)
20000056:	0018      	movs	r0, r3
20000058:	46bd      	mov	sp, r7
2000005a:	b002      	add	sp, #8
2000005c:	bd80      	pop	{r7, pc}
2000005e:	46c0      	nop			; (mov r8, r8)
20000060:	40011000 	andmi	r1, r1, r0

20000064 <_inituart>:

void _inituart() {
20000064:	b580      	push	{r7, lr}
20000066:	af00      	add	r7, sp, #0
	USART1->brr = 0x2D9;
20000068:	4b05      	ldr	r3, [pc, #20]	; (20000080 <_inituart+0x1c>)
2000006a:	4a06      	ldr	r2, [pc, #24]	; (20000084 <_inituart+0x20>)
2000006c:	609a      	str	r2, [r3, #8]
	USART1->cr2 = 0;
2000006e:	4b04      	ldr	r3, [pc, #16]	; (20000080 <_inituart+0x1c>)
20000070:	2200      	movs	r2, #0
20000072:	611a      	str	r2, [r3, #16]
	USART1->cr1 = (1<<13) | (1<<3) | (1<<2);
20000074:	4b02      	ldr	r3, [pc, #8]	; (20000080 <_inituart+0x1c>)
20000076:	4a04      	ldr	r2, [pc, #16]	; (20000088 <_inituart+0x24>)
20000078:	60da      	str	r2, [r3, #12]
	
}
2000007a:	46c0      	nop			; (mov r8, r8)
2000007c:	46bd      	mov	sp, r7
2000007e:	bd80      	pop	{r7, pc}
20000080:	40011000 	andmi	r1, r1, r0
20000084:	000002d9 	ldrdeq	r0, [r0], -r9
20000088:	0000200c 	andeq	r2, r0, ip

2000008c <main>:

void main(void) {
2000008c:	b590      	push	{r4, r7, lr}
2000008e:	b083      	sub	sp, #12
20000090:	af00      	add	r7, sp, #0
	char c;
	_inituart();
20000092:	f7ff ffe7 	bl	20000064 <_inituart>
	while(1) {
		c = _tstchar();
20000096:	1dfc      	adds	r4, r7, #7
20000098:	f7ff ffba 	bl	20000010 <_tstchar>
2000009c:	0003      	movs	r3, r0
2000009e:	7023      	strb	r3, [r4, #0]
		if(c) {
200000a0:	1dfb      	adds	r3, r7, #7
200000a2:	781b      	ldrb	r3, [r3, #0]
200000a4:	2b00      	cmp	r3, #0
200000a6:	d0f6      	beq.n	20000096 <main+0xa>
			_outchar(c);
200000a8:	1dfb      	adds	r3, r7, #7
200000aa:	781b      	ldrb	r3, [r3, #0]
200000ac:	0018      	movs	r0, r3
200000ae:	f7ff ffc1 	bl	20000034 <_outchar>
		c = _tstchar();
200000b2:	e7f0      	b.n	20000096 <main+0xa>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000116 	andeq	r0, r0, r6, lsl r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000071 	andeq	r0, r0, r1, ror r0
  10:	00001c0c 	andeq	r1, r0, ip, lsl #24
	...
  20:	011c0200 	tsteq	ip, r0, lsl #4
  24:	00007c11 	andeq	r7, r0, r1, lsl ip
  28:	72730300 	rsbsvc	r0, r3, #0, 6
  2c:	83120100 	tsthi	r2, #0, 2
  30:	00000000 	andeq	r0, r0, r0
  34:	00726403 	rsbseq	r6, r2, r3, lsl #8
  38:	00831301 	addeq	r1, r3, r1, lsl #6
  3c:	03040000 	movweq	r0, #16384	; 0x4000
  40:	00727262 	rsbseq	r7, r2, r2, ror #4
  44:	00831401 	addeq	r1, r3, r1, lsl #8
  48:	03080000 	movweq	r0, #32768	; 0x8000
  4c:	00317263 	eorseq	r7, r1, r3, ror #4
  50:	00831501 	addeq	r1, r3, r1, lsl #10
  54:	030c0000 	movweq	r0, #49152	; 0xc000
  58:	00327263 	eorseq	r7, r2, r3, ror #4
  5c:	00831601 	addeq	r1, r3, r1, lsl #12
  60:	03100000 	tsteq	r0, #0
  64:	00337263 	eorseq	r7, r3, r3, ror #4
  68:	00831701 	addeq	r1, r3, r1, lsl #14
  6c:	04140000 	ldreq	r0, [r4], #-0
  70:	0000000d 	andeq	r0, r0, sp
  74:	00831801 	addeq	r1, r3, r1, lsl #16
  78:	00180000 	andseq	r0, r8, r0
  7c:	00070405 	andeq	r0, r7, r5, lsl #8
  80:	06000000 	streq	r0, [r0], -r0
  84:	0000007c 	andeq	r0, r0, ip, ror r0
  88:	00010e07 	andeq	r0, r1, r7, lsl #28
  8c:	21190100 	tstcs	r9, r0, lsl #2
  90:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
  94:	00000109 	andeq	r0, r0, r9, lsl #2
  98:	008c3001 	addeq	r3, ip, r1
  9c:	00282000 	eoreq	r2, r8, r0
  a0:	9c010000 	stcls	0, cr0, [r1], {-0}
  a4:	000000b5 	strheq	r0, [r0], -r5
  a8:	01006309 	tsteq	r0, r9, lsl #6
  ac:	0000b531 	andeq	fp, r0, r1, lsr r5
  b0:	6f910200 	svcvs	0x00910200
  b4:	08010500 	stmdaeq	r1, {r8, sl}
  b8:	00000064 	andeq	r0, r0, r4, rrx
  bc:	0000120a 	andeq	r1, r0, sl, lsl #4
  c0:	64290100 	strtvs	r0, [r9], #-256	; 0xffffff00
  c4:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
  c8:	01000000 	mrseq	r0, (UNDEF: 0)
  cc:	00570b9c 			; <UNDEFINED> instruction: 0x00570b9c
  d0:	24010000 	strcs	r0, [r1], #-0
  d4:	000000b5 	strheq	r0, [r0], -r5
  d8:	20000034 	andcs	r0, r0, r4, lsr r0
  dc:	00000030 	andeq	r0, r0, r0, lsr r0
  e0:	00f39c01 	rscseq	r9, r3, r1, lsl #24
  e4:	630c0000 	movwvs	r0, #49152	; 0xc000
  e8:	b5240100 	strlt	r0, [r4, #-256]!	; 0xffffff00
  ec:	02000000 	andeq	r0, r0, #0
  f0:	0d007791 	stceq	7, cr7, [r0, #-580]	; 0xfffffdbc
  f4:	00000060 	andeq	r0, r0, r0, rrx
  f8:	00b51d01 	adcseq	r1, r5, r1, lsl #26
  fc:	00100000 	andseq	r0, r0, r0
 100:	00242000 	eoreq	r2, r4, r0
 104:	9c010000 	stcls	0, cr0, [r1], {-0}
 108:	0000690e 	andeq	r6, r0, lr, lsl #18
 10c:	00070100 	andeq	r0, r7, r0, lsl #2
 110:	0c200000 	stceq	0, cr0, [r0], #-0
 114:	01000000 	mrseq	r0, (UNDEF: 0)
 118:	Address 0x00000118 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01130200 	tsteq	r3, r0, lsl #4
  14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
  18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  1c:	0d030000 	stceq	0, cr0, [r3, #-0]
  20:	3a080300 	bcc	200c28 <startup-0x1fdff3d8>
  24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  28:	000b3813 	andeq	r3, fp, r3, lsl r8
  2c:	000d0400 	andeq	r0, sp, r0, lsl #8
  30:	0b3a0e03 	bleq	e83844 <startup-0x1f17c7bc>
  34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  38:	00000b38 	andeq	r0, r0, r8, lsr fp
  3c:	0b002405 	bleq	9058 <startup-0x1fff6fa8>
  40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  44:	0600000e 	streq	r0, [r0], -lr
  48:	13490035 	movtne	r0, #36917	; 0x9035
  4c:	16070000 	strne	r0, [r7], -r0
  50:	3a0e0300 	bcc	380c58 <startup-0x1fc7f3a8>
  54:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  58:	08000013 	stmdaeq	r0, {r0, r1, r4}
  5c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  60:	0b3a0e03 	bleq	e83874 <startup-0x1f17c78c>
  64:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  68:	06120111 			; <UNDEFINED> instruction: 0x06120111
  6c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  70:	00130119 	andseq	r0, r3, r9, lsl r1
  74:	00340900 	eorseq	r0, r4, r0, lsl #18
  78:	0b3a0803 	bleq	e8208c <startup-0x1f17df74>
  7c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  80:	00001802 	andeq	r1, r0, r2, lsl #16
  84:	3f002e0a 	svccc	0x00002e0a
  88:	3a0e0319 	bcc	380cf4 <startup-0x1fc7f30c>
  8c:	110b3b0b 	tstne	fp, fp, lsl #22
  90:	40061201 	andmi	r1, r6, r1, lsl #4
  94:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  98:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
  9c:	03193f01 	tsteq	r9, #1, 30
  a0:	3b0b3a0e 	blcc	2ce8e0 <startup-0x1fd31720>
  a4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  ac:	97184006 	ldrls	r4, [r8, -r6]
  b0:	13011942 	movwne	r1, #6466	; 0x1942
  b4:	050c0000 	streq	r0, [ip, #-0]
  b8:	3a080300 	bcc	200cc0 <startup-0x1fdff340>
  bc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  c0:	00180213 	andseq	r0, r8, r3, lsl r2
  c4:	002e0d00 	eoreq	r0, lr, r0, lsl #26
  c8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  cc:	0b3b0b3a 	bleq	ec2dbc <startup-0x1f13d244>
  d0:	01111349 	tsteq	r1, r9, asr #6
  d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  d8:	00194297 	mulseq	r9, r7, r2
  dc:	002e0e00 	eoreq	r0, lr, r0, lsl #28
  e0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  e4:	0b3b0b3a 	bleq	ec2dd4 <startup-0x1f13d22c>
  e8:	01111927 	tsteq	r1, r7, lsr #18
  ec:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  f0:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000a4 	andeq	r0, r0, r4, lsr #1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200000b4 	strhcs	r0, [r0], -r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	0000008f 	andeq	r0, r0, pc, lsl #1
   4:	00510002 	subseq	r0, r1, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	706d6148 	rsbvc	r6, sp, r8, asr #2
  28:	442f7375 	strtmi	r7, [pc], #-885	; 30 <startup-0x1fffffd0>
  2c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  30:	442f706f 	strtmi	r7, [pc], #-111	; 38 <startup-0x1fffffc8>
  34:	31305441 	teqcc	r0, r1, asr #8
  38:	6f432f37 	svcvs	0x00432f37
  3c:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
  40:	652f6574 	strvs	r6, [pc, #-1396]!	; fffffad4 <main+0xdffffa48>
  44:	5f6f6863 	svcpl	0x006f6863
  48:	00315f37 	eorseq	r5, r1, r7, lsr pc
  4c:	61747300 	cmnvs	r4, r0, lsl #6
  50:	70757472 	rsbsvc	r7, r5, r2, ror r4
  54:	0100632e 	tsteq	r0, lr, lsr #6
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000205 	andeq	r0, r0, r5, lsl #4
  60:	13192000 	tstne	r9, #0
  64:	0003025e 	andeq	r0, r3, lr, asr r2
  68:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  6c:	00001002 	andeq	r1, r0, r2
  70:	011c0320 	tsteq	ip, r0, lsr #6
  74:	3d30592f 			; <UNDEFINED> instruction: 0x3d30592f
  78:	02006768 	andeq	r6, r0, #104, 14	; 0x1a00000
  7c:	20060104 	andcs	r0, r6, r4, lsl #2
  80:	844b5906 	strbhi	r5, [fp], #-2310	; 0xfffff6fa
  84:	3e3d3d2f 	cdpcc	13, 3, cr3, cr13, cr15, {1}
  88:	59303e92 	ldmdbpl	r0!, {r1, r4, r7, r9, sl, fp, ip, sp}
  8c:	0102564b 	tsteq	r2, fp, asr #12
  90:	Address 0x00000090 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	70746700 	rsbsvc	r6, r4, r0, lsl #14
  10:	695f0072 	ldmdbvs	pc, {r1, r4, r5, r6}^	; <UNPREDICTABLE>
  14:	7574696e 	ldrbvc	r6, [r4, #-2414]!	; 0xfffff692
  18:	00747261 	rsbseq	r7, r4, r1, ror #4
  1c:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5e1 <main+0xdffff555>
  20:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  24:	6d61482f 	stclvs	8, cr4, [r1, #-188]!	; 0xffffff44
  28:	2f737570 	svccs	0x00737570
  2c:	6b736544 	blvs	1cd9544 <startup-0x1e326abc>
  30:	2f706f74 	svccs	0x00706f74
  34:	30544144 	subscc	r4, r4, r4, asr #2
  38:	432f3731 			; <UNDEFINED> instruction: 0x432f3731
  3c:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  40:	2f657469 	svccs	0x00657469
  44:	6f686365 	svcvs	0x00686365
  48:	315f375f 	cmpcc	pc, pc, asr r7	; <UNPREDICTABLE>
  4c:	6174732f 	cmnvs	r4, pc, lsr #6
  50:	70757472 	rsbsvc	r7, r5, r2, ror r4
  54:	5f00632e 	svcpl	0x0000632e
  58:	6374756f 	cmnvs	r4, #465567744	; 0x1bc00000
  5c:	00726168 	rsbseq	r6, r2, r8, ror #2
  60:	7473745f 	ldrbtvc	r7, [r3], #-1119	; 0xfffffba1
  64:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
  68:	61747300 	cmnvs	r4, r0, lsl #6
  6c:	70757472 	rsbsvc	r7, r5, r2, ror r4
  70:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  74:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  78:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  7c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  80:	30373130 	eorscc	r3, r7, r0, lsr r1
  84:	20353132 	eorscs	r3, r5, r2, lsr r1
  88:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  8c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  90:	415b2029 	cmpmi	fp, r9, lsr #32
  94:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff34a <main+0xdffff2be>
  98:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  9c:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  a0:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  a4:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  a8:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  ac:	6f697369 	svcvs	0x00697369
  b0:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  b4:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  b8:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  bc:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  c0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  c4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  c8:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  cc:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  d0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  d4:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  d8:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  dc:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  e0:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  e4:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  e8:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  ec:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  f0:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  f4:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  f8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  fc:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 100:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 104:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 108:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 10c:	5355006e 	cmppl	r5, #110	; 0x6e
 110:	00545241 	subseq	r5, r4, r1, asr #4

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000024 	andeq	r0, r0, r4, lsr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000034 	andcs	r0, r0, r4, lsr r0
  48:	00000030 	andeq	r0, r0, r0, lsr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000064 	andcs	r0, r0, r4, rrx
  68:	00000028 	andeq	r0, r0, r8, lsr #32
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  78:	00000020 	andeq	r0, r0, r0, lsr #32
  7c:	00000000 	andeq	r0, r0, r0
  80:	2000008c 	andcs	r0, r0, ip, lsl #1
  84:	00000028 	andeq	r0, r0, r8, lsr #32
  88:	400c0e41 	andmi	r0, ip, r1, asr #28
  8c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  90:	018e4002 	orreq	r4, lr, r2
  94:	41180e41 	tstmi	r8, r1, asr #28
  98:	0000070d 	andeq	r0, r0, sp, lsl #14
