
./Debug/flipflop_irq_ack.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8aa 	bl	2000015c <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <interrupt_handler>:


volatile unsigned char count = 0;
void interrupt_handler(void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	if(*EXTI_PR & 0x08) {
20000014:	4b20      	ldr	r3, [pc, #128]	; (20000098 <interrupt_handler+0x88>)
20000016:	681b      	ldr	r3, [r3, #0]
20000018:	2208      	movs	r2, #8
2000001a:	4013      	ands	r3, r2
2000001c:	d039      	beq.n	20000092 <interrupt_handler+0x82>
		// IRQ0
		if(*EXTI_PR & 0x01) {
2000001e:	4b1e      	ldr	r3, [pc, #120]	; (20000098 <interrupt_handler+0x88>)
20000020:	681b      	ldr	r3, [r3, #0]
20000022:	2201      	movs	r2, #1
20000024:	4013      	ands	r3, r2
20000026:	d00d      	beq.n	20000044 <interrupt_handler+0x34>
			count++;
20000028:	4b1c      	ldr	r3, [pc, #112]	; (2000009c <interrupt_handler+0x8c>)
2000002a:	781b      	ldrb	r3, [r3, #0]
2000002c:	b2db      	uxtb	r3, r3
2000002e:	3301      	adds	r3, #1
20000030:	b2da      	uxtb	r2, r3
20000032:	4b1a      	ldr	r3, [pc, #104]	; (2000009c <interrupt_handler+0x8c>)
20000034:	701a      	strb	r2, [r3, #0]
			*EXTI_PR |= 0x01;
20000036:	4b18      	ldr	r3, [pc, #96]	; (20000098 <interrupt_handler+0x88>)
20000038:	4a17      	ldr	r2, [pc, #92]	; (20000098 <interrupt_handler+0x88>)
2000003a:	6812      	ldr	r2, [r2, #0]
2000003c:	2101      	movs	r1, #1
2000003e:	430a      	orrs	r2, r1
20000040:	601a      	str	r2, [r3, #0]
20000042:	e020      	b.n	20000086 <interrupt_handler+0x76>
		}
		// IRQ1
		else if(*EXTI_PR & 0x02) {
20000044:	4b14      	ldr	r3, [pc, #80]	; (20000098 <interrupt_handler+0x88>)
20000046:	681b      	ldr	r3, [r3, #0]
20000048:	2202      	movs	r2, #2
2000004a:	4013      	ands	r3, r2
2000004c:	d009      	beq.n	20000062 <interrupt_handler+0x52>
			count = 0;
2000004e:	4b13      	ldr	r3, [pc, #76]	; (2000009c <interrupt_handler+0x8c>)
20000050:	2200      	movs	r2, #0
20000052:	701a      	strb	r2, [r3, #0]
			*EXTI_PR |= 0x02;
20000054:	4b10      	ldr	r3, [pc, #64]	; (20000098 <interrupt_handler+0x88>)
20000056:	4a10      	ldr	r2, [pc, #64]	; (20000098 <interrupt_handler+0x88>)
20000058:	6812      	ldr	r2, [r2, #0]
2000005a:	2102      	movs	r1, #2
2000005c:	430a      	orrs	r2, r1
2000005e:	601a      	str	r2, [r3, #0]
20000060:	e011      	b.n	20000086 <interrupt_handler+0x76>
		}
		// IRQ2
		else if(*EXTI_PR & 0x04) {
20000062:	4b0d      	ldr	r3, [pc, #52]	; (20000098 <interrupt_handler+0x88>)
20000064:	681b      	ldr	r3, [r3, #0]
20000066:	2204      	movs	r2, #4
20000068:	4013      	ands	r3, r2
2000006a:	d00c      	beq.n	20000086 <interrupt_handler+0x76>
			count = ~count;
2000006c:	4b0b      	ldr	r3, [pc, #44]	; (2000009c <interrupt_handler+0x8c>)
2000006e:	781b      	ldrb	r3, [r3, #0]
20000070:	b2db      	uxtb	r3, r3
20000072:	43db      	mvns	r3, r3
20000074:	b2da      	uxtb	r2, r3
20000076:	4b09      	ldr	r3, [pc, #36]	; (2000009c <interrupt_handler+0x8c>)
20000078:	701a      	strb	r2, [r3, #0]
			*EXTI_PR |= 0x04;
2000007a:	4b07      	ldr	r3, [pc, #28]	; (20000098 <interrupt_handler+0x88>)
2000007c:	4a06      	ldr	r2, [pc, #24]	; (20000098 <interrupt_handler+0x88>)
2000007e:	6812      	ldr	r2, [r2, #0]
20000080:	2104      	movs	r1, #4
20000082:	430a      	orrs	r2, r1
20000084:	601a      	str	r2, [r3, #0]
		}
		*EXTI_PR |= 0x08;
20000086:	4b04      	ldr	r3, [pc, #16]	; (20000098 <interrupt_handler+0x88>)
20000088:	4a03      	ldr	r2, [pc, #12]	; (20000098 <interrupt_handler+0x88>)
2000008a:	6812      	ldr	r2, [r2, #0]
2000008c:	2108      	movs	r1, #8
2000008e:	430a      	orrs	r2, r1
20000090:	601a      	str	r2, [r3, #0]
	}
	
}
20000092:	46c0      	nop			; (mov r8, r8)
20000094:	46bd      	mov	sp, r7
20000096:	bd80      	pop	{r7, pc}
20000098:	40013c14 	andmi	r3, r1, r4, lsl ip
2000009c:	20000178 	andcs	r0, r0, r8, ror r1

200000a0 <init_app>:

void init_app(void) {
200000a0:	b580      	push	{r7, lr}
200000a2:	af00      	add	r7, sp, #0
	// Setup hex display
	*GPIO_D_MODER &= 0xFFFF0000;
200000a4:	4b23      	ldr	r3, [pc, #140]	; (20000134 <init_app+0x94>)
200000a6:	4a23      	ldr	r2, [pc, #140]	; (20000134 <init_app+0x94>)
200000a8:	6812      	ldr	r2, [r2, #0]
200000aa:	0c12      	lsrs	r2, r2, #16
200000ac:	0412      	lsls	r2, r2, #16
200000ae:	601a      	str	r2, [r3, #0]
	*GPIO_D_MODER |= 0x00005555;
200000b0:	4b20      	ldr	r3, [pc, #128]	; (20000134 <init_app+0x94>)
200000b2:	4a20      	ldr	r2, [pc, #128]	; (20000134 <init_app+0x94>)
200000b4:	6812      	ldr	r2, [r2, #0]
200000b6:	4920      	ldr	r1, [pc, #128]	; (20000138 <init_app+0x98>)
200000b8:	430a      	orrs	r2, r1
200000ba:	601a      	str	r2, [r3, #0]
	
	// Setup E as input
	*GPIO_E_MODER = 0;
200000bc:	4b1f      	ldr	r3, [pc, #124]	; (2000013c <init_app+0x9c>)
200000be:	2200      	movs	r2, #0
200000c0:	601a      	str	r2, [r3, #0]
	
	// Setup PE3,PE2,PE1,PE0 to EXTICR1
	*SYSCFG_EXTICR1 &= 0xFFFF0000; 
200000c2:	4b1f      	ldr	r3, [pc, #124]	; (20000140 <init_app+0xa0>)
200000c4:	4a1e      	ldr	r2, [pc, #120]	; (20000140 <init_app+0xa0>)
200000c6:	6812      	ldr	r2, [r2, #0]
200000c8:	0c12      	lsrs	r2, r2, #16
200000ca:	0412      	lsls	r2, r2, #16
200000cc:	601a      	str	r2, [r3, #0]
	*SYSCFG_EXTICR1 |= 0x00004444;
200000ce:	4b1c      	ldr	r3, [pc, #112]	; (20000140 <init_app+0xa0>)
200000d0:	4a1b      	ldr	r2, [pc, #108]	; (20000140 <init_app+0xa0>)
200000d2:	6812      	ldr	r2, [r2, #0]
200000d4:	491b      	ldr	r1, [pc, #108]	; (20000144 <init_app+0xa4>)
200000d6:	430a      	orrs	r2, r1
200000d8:	601a      	str	r2, [r3, #0]
	
	// Setup EXTI for P3,PE2,PE1,PE0
	*EXTI_IMR |= 0x0F;
200000da:	4b1b      	ldr	r3, [pc, #108]	; (20000148 <init_app+0xa8>)
200000dc:	4a1a      	ldr	r2, [pc, #104]	; (20000148 <init_app+0xa8>)
200000de:	6812      	ldr	r2, [r2, #0]
200000e0:	210f      	movs	r1, #15
200000e2:	430a      	orrs	r2, r1
200000e4:	601a      	str	r2, [r3, #0]
	*EXTI_FTSR |= 0x0F;
200000e6:	4b19      	ldr	r3, [pc, #100]	; (2000014c <init_app+0xac>)
200000e8:	4a18      	ldr	r2, [pc, #96]	; (2000014c <init_app+0xac>)
200000ea:	6812      	ldr	r2, [r2, #0]
200000ec:	210f      	movs	r1, #15
200000ee:	430a      	orrs	r2, r1
200000f0:	601a      	str	r2, [r3, #0]
	
	// Setup EXTI2,EXTI1,EXTI0 interrupt function
	*((void (**)(void)) 0x2001C064) = interrupt_handler;
200000f2:	4b17      	ldr	r3, [pc, #92]	; (20000150 <init_app+0xb0>)
200000f4:	4a17      	ldr	r2, [pc, #92]	; (20000154 <init_app+0xb4>)
200000f6:	601a      	str	r2, [r3, #0]

	// Enable EXT13,EXTI2,EXTI1,EXTI0 in NVIC
	*((unsigned int *) 0xE000E100) |= (1<<9);
200000f8:	4b17      	ldr	r3, [pc, #92]	; (20000158 <init_app+0xb8>)
200000fa:	4a17      	ldr	r2, [pc, #92]	; (20000158 <init_app+0xb8>)
200000fc:	6812      	ldr	r2, [r2, #0]
200000fe:	2180      	movs	r1, #128	; 0x80
20000100:	0089      	lsls	r1, r1, #2
20000102:	430a      	orrs	r2, r1
20000104:	601a      	str	r2, [r3, #0]
	*((unsigned int *) 0xE000E100) |= (1<<8);
20000106:	4b14      	ldr	r3, [pc, #80]	; (20000158 <init_app+0xb8>)
20000108:	4a13      	ldr	r2, [pc, #76]	; (20000158 <init_app+0xb8>)
2000010a:	6812      	ldr	r2, [r2, #0]
2000010c:	2180      	movs	r1, #128	; 0x80
2000010e:	0049      	lsls	r1, r1, #1
20000110:	430a      	orrs	r2, r1
20000112:	601a      	str	r2, [r3, #0]
	*((unsigned int *) 0xE000E100) |= (1<<7);
20000114:	4b10      	ldr	r3, [pc, #64]	; (20000158 <init_app+0xb8>)
20000116:	4a10      	ldr	r2, [pc, #64]	; (20000158 <init_app+0xb8>)
20000118:	6812      	ldr	r2, [r2, #0]
2000011a:	2180      	movs	r1, #128	; 0x80
2000011c:	430a      	orrs	r2, r1
2000011e:	601a      	str	r2, [r3, #0]
	*((unsigned int *) 0xE000E100) |= (1<<6);
20000120:	4b0d      	ldr	r3, [pc, #52]	; (20000158 <init_app+0xb8>)
20000122:	4a0d      	ldr	r2, [pc, #52]	; (20000158 <init_app+0xb8>)
20000124:	6812      	ldr	r2, [r2, #0]
20000126:	2140      	movs	r1, #64	; 0x40
20000128:	430a      	orrs	r2, r1
2000012a:	601a      	str	r2, [r3, #0]
}
2000012c:	46c0      	nop			; (mov r8, r8)
2000012e:	46bd      	mov	sp, r7
20000130:	bd80      	pop	{r7, pc}
20000132:	46c0      	nop			; (mov r8, r8)
20000134:	40020c00 	andmi	r0, r2, r0, lsl #24
20000138:	00005555 	andeq	r5, r0, r5, asr r5
2000013c:	40021000 	andmi	r1, r2, r0
20000140:	40013808 	andmi	r3, r1, r8, lsl #16
20000144:	00004444 	andeq	r4, r0, r4, asr #8
20000148:	40013c00 	andmi	r3, r1, r0, lsl #24
2000014c:	40013c0c 	andmi	r3, r1, ip, lsl #24
20000150:	2001c064 	andcs	ip, r1, r4, rrx
20000154:	20000011 	andcs	r0, r0, r1, lsl r0
20000158:	e000e100 	and	lr, r0, r0, lsl #2

2000015c <main>:
 
void main(void) {
2000015c:	b580      	push	{r7, lr}
2000015e:	af00      	add	r7, sp, #0
	init_app();
20000160:	f7ff ff9e 	bl	200000a0 <init_app>
	while(1) {
		*GPIO_D_ODR_LOW = count;
20000164:	4a02      	ldr	r2, [pc, #8]	; (20000170 <main+0x14>)
20000166:	4b03      	ldr	r3, [pc, #12]	; (20000174 <main+0x18>)
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	b2db      	uxtb	r3, r3
2000016c:	7013      	strb	r3, [r2, #0]
2000016e:	e7f9      	b.n	20000164 <main+0x8>
20000170:	40020c14 	andmi	r0, r2, r4, lsl ip
20000174:	20000178 	andcs	r0, r0, r8, ror r1

20000178 <count>:
20000178:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000007f 	andeq	r0, r0, pc, ror r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000072 	andeq	r0, r0, r2, ror r0
  10:	0000000c 	andeq	r0, r0, ip
	...
  20:	00430200 	subeq	r0, r3, r0, lsl #4
  24:	32010000 	andcc	r0, r1, #0
  28:	00000039 	andeq	r0, r0, r9, lsr r0
  2c:	01780305 	cmneq	r8, r5, lsl #6
  30:	01032000 	mrseq	r2, (UNDEF: 3)
  34:	00006408 	andeq	r6, r0, r8, lsl #8
  38:	00320400 	eorseq	r0, r2, r0, lsl #8
  3c:	0a050000 	beq	140044 <startup-0x1febffbc>
  40:	01000001 	tsteq	r0, r1
  44:	00015c63 	andeq	r5, r1, r3, ror #24
  48:	00001c20 	andeq	r1, r0, r0, lsr #24
  4c:	069c0100 	ldreq	r0, [ip], r0, lsl #2
  50:	00000049 	andeq	r0, r0, r9, asr #32
  54:	00a04901 	adceq	r4, r0, r1, lsl #18
  58:	00bc2000 	adcseq	r2, ip, r0
  5c:	9c010000 	stcls	0, cr0, [r1], {-0}
  60:	00005206 	andeq	r5, r0, r6, lsl #4
  64:	10330100 	eorsne	r0, r3, r0, lsl #2
  68:	90200000 	eorls	r0, r0, r0
  6c:	01000000 	mrseq	r0, (UNDEF: 0)
  70:	010f069c 			; <UNDEFINED> instruction: 0x010f069c
  74:	27010000 	strcs	r0, [r1, -r0]
  78:	20000000 	andcs	r0, r0, r0
  7c:	0000000c 	andeq	r0, r0, ip
  80:	Address 0x00000080 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00340200 	eorseq	r0, r4, r0, lsl #4
  14:	0b3a0e03 	bleq	e83828 <startup-0x1f17c7d8>
  18:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  1c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  20:	24030000 	strcs	r0, [r3], #-0
  24:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  28:	000e030b 	andeq	r0, lr, fp, lsl #6
  2c:	00350400 	eorseq	r0, r5, r0, lsl #8
  30:	00001349 	andeq	r1, r0, r9, asr #6
  34:	3f002e05 	svccc	0x00002e05
  38:	3a0e0319 	bcc	380ca4 <startup-0x1fc7f35c>
  3c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  40:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  44:	96184006 	ldrls	r4, [r8], -r6
  48:	00001942 	andeq	r1, r0, r2, asr #18
  4c:	3f002e06 	svccc	0x00002e06
  50:	3a0e0319 	bcc	380cbc <startup-0x1fc7f344>
  54:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  58:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  5c:	97184006 	ldrls	r4, [r8, -r6]
  60:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000168 	andeq	r0, r0, r8, ror #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000178 	andcs	r0, r0, r8, ror r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a1 	andeq	r0, r0, r1, lsr #1
   4:	00590002 	subseq	r0, r9, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	706d6148 	rsbvc	r6, sp, r8, asr #2
  28:	442f7375 	strtmi	r7, [pc], #-885	; 30 <startup-0x1fffffd0>
  2c:	746b7365 	strbtvc	r7, [fp], #-869	; 0xfffffc9b
  30:	442f706f 	strtmi	r7, [pc], #-111	; 38 <startup-0x1fffffc8>
  34:	31305441 	teqcc	r0, r1, asr #8
  38:	6f432f37 	svcvs	0x00432f37
  3c:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
  40:	662f6574 			; <UNDEFINED> instruction: 0x662f6574
  44:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  48:	5f706f6c 	svcpl	0x00706f6c
  4c:	5f717269 	svcpl	0x00717269
  50:	006b6361 	rsbeq	r6, fp, r1, ror #6
  54:	61747300 	cmnvs	r4, r0, lsl #6
  58:	70757472 	rsbsvc	r7, r5, r2, ror r4
  5c:	0100632e 	tsteq	r0, lr, lsr #6
  60:	00000000 	andeq	r0, r0, r0
  64:	00000205 	andeq	r0, r0, r5, lsl #4
  68:	27032000 	strcs	r2, [r3, -r0]
  6c:	025e1301 	subseq	r1, lr, #67108864	; 0x4000000
  70:	01010003 	tsteq	r1, r3
  74:	10020500 	andne	r0, r2, r0, lsl #10
  78:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  7c:	5a2f0132 	bpl	bc054c <startup-0x1f43fab4>
  80:	59777559 	ldmdbpl	r7!, {r0, r3, r4, r6, r8, sl, ip, sp, lr}^
  84:	7559773d 	ldrbvc	r7, [r9, #-1853]	; 0xfffff8c3
  88:	30766968 	rsbscc	r6, r6, r8, ror #18
  8c:	673f6967 	ldrvs	r6, [pc, -r7, ror #18]!
  90:	3f696769 	svccc	0x00696769
  94:	67677575 			; <UNDEFINED> instruction: 0x67677575
  98:	002f7608 	eoreq	r7, pc, r8, lsl #12
  9c:	30010402 	andcc	r0, r1, r2, lsl #8
  a0:	01000a02 	tsteq	r0, r2, lsl #20
  a4:	Address 0x000000a4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5c5 <count+0xdffff44d>
   4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
   8:	6d61482f 	stclvs	8, cr4, [r1, #-188]!	; 0xffffff44
   c:	2f737570 	svccs	0x00737570
  10:	6b736544 	blvs	1cd9528 <startup-0x1e326ad8>
  14:	2f706f74 	svccs	0x00706f74
  18:	30544144 	subscc	r4, r4, r4, asr #2
  1c:	432f3731 			; <UNDEFINED> instruction: 0x432f3731
  20:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  24:	2f657469 	svccs	0x00657469
  28:	70696c66 	rsbvc	r6, r9, r6, ror #24
  2c:	706f6c66 	rsbvc	r6, pc, r6, ror #24
  30:	7172695f 	cmnvc	r2, pc, asr r9
  34:	6b63615f 	blvs	18d85b8 <startup-0x1e727a48>
  38:	6174732f 	cmnvs	r4, pc, lsr #6
  3c:	70757472 	rsbsvc	r7, r5, r2, ror r4
  40:	6300632e 	movwvs	r6, #814	; 0x32e
  44:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
  48:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  4c:	70615f74 	rsbvc	r5, r1, r4, ror pc
  50:	6e690070 	mcrvs	0, 3, r0, cr9, cr0, {3}
  54:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
  58:	5f747075 	svcpl	0x00747075
  5c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  60:	0072656c 	rsbseq	r6, r2, ip, ror #10
  64:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  68:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  6c:	61686320 	cmnvs	r8, r0, lsr #6
  70:	4e470072 	mcrmi	0, 2, r0, cr7, cr2, {3}
  74:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  78:	2e362039 	mrccs	0, 1, r2, cr6, cr9, {1}
  7c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  80:	37313032 			; <UNDEFINED> instruction: 0x37313032
  84:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  88:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  8c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  90:	5b202965 	blpl	80a62c <startup-0x1f7f59d4>
  94:	2f4d5241 	svccs	0x004d5241
  98:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  9c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  a0:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  a4:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  a8:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  ac:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  b0:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  b4:	31353534 	teqcc	r5, r4, lsr r5
  b8:	2d205d32 	stccs	13, cr5, [r0, #-200]!	; 0xffffff38
  bc:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  c0:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  c4:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  c8:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  cc:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  d0:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  d4:	616f6c66 	cmnvs	pc, r6, ror #24
  d8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  dc:	6f733d69 	svcvs	0x00733d69
  e0:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  e4:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  e8:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  ec:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  f0:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  f4:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  f8:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  fc:	304f2d20 	subcc	r2, pc, r0, lsr #26
 100:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 104:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 108:	616d0039 	cmnvs	sp, r9, lsr r0
 10c:	73006e69 	movwvc	r6, #3689	; 0xe69
 110:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 114:	Address 0x00000114 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000090 	muleq	r0, r0, r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	200000a0 	andcs	r0, r0, r0, lsr #1
  48:	000000bc 	strheq	r0, [r0], -ip
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	2000015c 	andcs	r0, r0, ip, asr r1
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	40080e41 	andmi	r0, r8, r1, asr #28
  6c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  70:	070d4101 	streq	r4, [sp, -r1, lsl #2]
